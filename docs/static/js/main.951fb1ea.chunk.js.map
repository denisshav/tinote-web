{"version":3,"sources":["components/Menu/Menu.module.css","assets/images/profile-img.png","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/NoteItems/NoteItems.module.css","components/FolderItems/FolderItems.module.css","containers/Tinote/Explorer/Explorer.module.css","components/UI/Backdrop/Backdrop.module.css","components/UI/Spinner/Spinner.module.css","components/UI/ContextMenu/ContextMenu.module.css","components/NoteItems/NoteItem/NoteItem.module.css","components/FolderItems/FolderItem/FolderItem.module.css","hoc/Layout/Layout.js","components/Menu/Profile/Profile.js","components/UI/ToolbarButton/ToolbarButton.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Menu/Toolbar/Toolbar.js","components/Menu/Menu.js","components/NoteItems/NoteItem/NoteItem.js","shared/utility.js","components/NoteItems/NoteItems.js","components/FolderItems/FolderItem/FolderItem.js","shared/constants.js","components/FolderItems/FolderItems.js","myFirebase.js","FirebaseDBClient.js","store/actions/notes.js","store/actions/actionTypes.js","store/actions/folders.js","myAuth.js","store/actions/auth.js","containers/Tinote/Explorer/Explorer.js","components/NoteEditingToolbar/NoteEditingToolbar.js","containers/Tinote/NoteEditor/NoteEditor.js","components/UI/ContextMenu/ContextMenu.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","containers/Tinote/Tinote.js","components/UI/Input/Input.js","components/UI/Button/Button.js","components/UI/Spinner/Spinner.js","containers/Auth/Auth.js","App.js","store/reducers/notes.js","store/reducers/folders.js","store/reducers/auth.js","index.js","components/UI/Input/Input.module.css","containers/Tinote/Tinote.module.css","components/Menu/Profile/Profile.module.css","components/Menu/Toolbar/Toolbar.module.css","containers/Tinote/NoteEditor/NoteEditor.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/UI/ToolbarButton/ToolbarButton.module.css","components/NoteEditingToolbar/NoteEditingToolbar.module.css","components/UI/Button/Button.module.css","containers/Auth/Auth.module.css"],"names":["module","exports","Layout","Fragment","style","height","this","props","children","Component","toolbar","className","classes","Profile","Img","src","profileImg","alt","ProfileName","profileName","toolbarButton","classNames","ToolbarButton","active","push","Active","onClick","clicked","btnType","drawerToggle","DrawerToggle","Toolbar","burgerClicked","Search","type","placeholder","Button","buttonClicked","Menu","openSideDrawer","toolbarBtnType","toolbarButtonClicked","noteItem","NoteItem","onContextMenu","leftClicked","onClickCapture","join","contentEditable","rename","onBlur","onRename","onKeyPress","Title","title","Content","content","Date","date","updateObject","state","newObject","debounce","fn","time","timeout","args","later","clearTimeout","apply","setTimeout","getDifferenceBetweenArrays","prevArr","newArr","isDiffer","updated","deleted","filter","prevObj","some","newObj","id","includes","length","stripHtml","html","tmp","document","createElement","innerHTML","textContent","innerText","NoteItems","jsxNotes","notes","map","note","event","showContext","current","onEndRename","renameId","key","select","slice","moment","fromNow","folderItem","FolderItem","color","Icon","icon","Name","name","initialFolder","initialNote","folderOptions","action","isTable","buttons","backgroundColor","noteOptions","trashOptions","folderItems","jsxFolders","folders","folder","FolderItems","addFolder","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","fireDB","db","firestore","init","collection","listenerFn","onSnapshot","snapshot","docChanges","forEach","change","doc","data","console","log","_registerListener","collectionName","notesDiff","foldersDiff","Promise","resolve","reject","batch","docRef","delete","set","commit","then","response","catch","error","get","querySnapshot","docs","selectNote","renameNote","newName","fetchNotes","dispatch","FireDB","getTime","fetchNotesFail","updateNotesSuccess","initListenForSyncNotes","registerNotesListener","syncNotesFromServer","renameFolder","fetchFolders","fetchFoldersFail","updateFoldersSuccess","initListenForSyncFolders","registerFoldersListener","syncFoldersFromServer","auth","authFail","Explorer","renameNoteId","renameFolderId","updateFolders","onUpdateFolders","updateNotes","onUpdateNotes","selectNoteHandler","onSelectNote","onFetchFolders","onFetchNotes","prevProps","RenameContext","Consumer","renameEndHandler","showContextMenu","onAddFolder","currentFolder","onSelectFolder","currentNote","n","connect","actions","getId","onRenameFolder","getState","foldersState","lastUpdateFromClient","lastUpdateFromServer","save","updateFoldersFail","onRenameNote","notesState","updateNotesFail","NoteEditingToolbar","button","index","toolbarBtnClicked","activeAction","inactiveAction","ArrowBack","arrowClicked","quillModules","header","list","indent","quillFormats","NoteEditor","handleChange","value","currentNoteItem","onInputText","arrowBackHancler","quill","modules","formats","readOnly","Quill","onChange","noteEditorClasses","isShow","ShowEditor","find","text","contextMenu","jsxOptions","options","option","ContextMenuItem","items","optionHandler","jsxItems","item","ind","TableMenu","createSubMenu","ContextMenu","show","addEventListener","closed","Hide","top","y","left","x","ContextMenuItems","backdrop","open","Backdrop","sideDrawer","SideDrawer","Open","Close","close","React","createContext","Tinote","contextMenuShowHandler","elemType","preventDefault","pageX","pageY","setState","contextMenuHideHandler","toolbarNoteHandler","isTrashOpen","onClearTrash","onAddNote","now","contextMenuOptionHandler","onRemoveFolder","onMoveNoteToTrash","prevState","renameContext","onClearNotesInTrash","Error","Object","keys","onChangeFolderColor","onChangeFolderIcon","openSideDrawerHandler","isSideDrawerOpen","closeSideDrawerHandler","target","onInitSyncNotes","onInitSyncFolders","authRedirect","isAuth","to","isEditorOpen","wrapperStyles","Wrapper","onLogout","Provider","contextElemType","signOut","res","input","inputClasses","InputElement","invalid","Invalid","Input","elemConfig","onInput","btnTupe","disabled","spinner","loader","Auth","isEmailInvalid","isPasswordInvalid","isSignin","emailValue","passwordValue","emailInputHandler","validator","isEmail","passwordInputHandler","isLength","min","max","sumbitHandler","e","onSignin","onSignup","switchModeHandler","onCheckAuthState","form","Spinner","loading","onSubmit","Buttons","email","password","signInWithEmailAndPassword","createUserWithEmailAndPassword","onAuthStateChanged","user","App","path","component","initialState","addNote","concat","moveToTrashNote","inputText","fetchNotesStart","fetchNotesSuccess","updateNotesStart","clearNotesInTrash","_","unionBy","oldN","delN","reducer","selectFolder","removeFolder","f","fetchFoldersStart","fetchFoldersSuccess","updateFoldersStart","changeFolderIcon","changeFolderColor","oldF","delF","authStart","authSuccess","authLogout","reducers","combineReducers","notesReducer","foldersReducer","authReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.951fb1ea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menu\":\"Menu_Menu__2U4Vu\"};","module.exports = __webpack_public_path__ + \"static/media/profile-img.01327c90.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__3iEQ1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NoteItems\":\"NoteItems_NoteItems__28LUH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FolderItems\":\"FolderItems_FolderItems__2jToC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Explorer\":\"Explorer_Explorer__3y22j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__NhvU6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__2KmVm\",\"load1\":\"Spinner_load1__30IQu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContextMenu\":\"ContextMenu_ContextMenu__1m4Th\",\"Hide\":\"ContextMenu_Hide__mJh99\",\"ContextMenuItems\":\"ContextMenu_ContextMenuItems__2cM-Z\",\"TableMenu\":\"ContextMenu_TableMenu__3rUfS\",\"ContextMenuItem\":\"ContextMenu_ContextMenuItem__BaZiy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NoteItem\":\"NoteItem_NoteItem__1I4-F\",\"Active\":\"NoteItem_Active__We-oo\",\"Title\":\"NoteItem_Title__2SM69\",\"Content\":\"NoteItem_Content__259o2\",\"Date\":\"NoteItem_Date__3WwS8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FolderItem\":\"FolderItem_FolderItem__5rgJ9\",\"Active\":\"FolderItem_Active__18g6D\",\"Icon\":\"FolderItem_Icon__1gRlN\",\"Name\":\"FolderItem_Name__2T2tw\"};","import React, { Component } from \"react\"\r\n\r\nclass Layout extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <main style={{ height: \"100%\" }}>{this.props.children}</main>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Layout\r\n","import React from \"react\"\r\n\r\nimport classes from \"./Profile.module.css\"\r\nimport profileImg from \"../../../assets/images/profile-img.png\"\r\n\r\nconst toolbar = props => {\r\n  return (\r\n    <div className={classes.Profile}>\r\n      <img className={classes.Img} src={profileImg} alt=\"Profile\"></img>\r\n      <p className={classes.ProfileName}>{props.profileName}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default toolbar\r\n","import React from \"react\"\r\n\r\nimport classes from \"./ToolbarButton.module.css\"\r\n\r\nconst toolbarButton = props => {\r\n  const classNames = [classes.ToolbarButton]\r\n\r\n  if (props.active) {\r\n    classNames.push(classes.Active)\r\n  }\r\n\r\n  return (\r\n    <div onClick={props.clicked} className={classNames}>\r\n      <span className={\"material-icons\"}>{props.btnType}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default toolbarButton\r\n","import React from \"react\"\r\n\r\nimport classes from \"./DrawerToggle.module.css\"\r\n\r\nconst drawerToggle = props => (\r\n  <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n  </div>\r\n)\r\n\r\nexport default drawerToggle\r\n","import React from \"react\"\r\n\r\nimport ToolbarButton from \"../../UI/ToolbarButton/ToolbarButton\"\r\nimport DrawerToggle from \"../../Navigation/SideDrawer/DrawerToggle/DrawerToggle\"\r\nimport classes from \"./Toolbar.module.css\"\r\n\r\nconst toolbar = props => {\r\n  return (\r\n    <div className={classes.Toolbar}>\r\n      <DrawerToggle clicked={props.burgerClicked} />\r\n\r\n      <input className={classes.Search} type=\"search\" placeholder=\"Search\" />\r\n\r\n      <div className={classes.Button}>\r\n        <ToolbarButton\r\n          clicked={props.buttonClicked}\r\n          active={false}\r\n          btnType={props.btnType}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default toolbar\r\n","import React from \"react\"\r\n\r\nimport classes from \"./Menu.module.css\"\r\nimport Profile from \"./Profile/Profile\"\r\nimport Toolbar from \"./Toolbar/Toolbar\"\r\n\r\nconst Menu = props => {\r\n  return (\r\n    <div className={classes.Menu}>\r\n      <Profile profileName={\"Name\"} />\r\n      <Toolbar\r\n        burgerClicked={props.openSideDrawer}\r\n        btnType={props.toolbarBtnType}\r\n        buttonClicked={props.toolbarButtonClicked}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Menu\r\n","import React from \"react\"\r\n\r\nimport classes from \"./NoteItem.module.css\"\r\n\r\nconst noteItem = props => {\r\n  const classNames = [classes.NoteItem]\r\n  if (props.active) {\r\n    classNames.push(classes.Active)\r\n  }\r\n\r\n  return (\r\n    <li\r\n      onContextMenu={props.leftClicked}\r\n      onClickCapture={props.clicked}\r\n      className={classNames.join(\" \")}\r\n    >\r\n      <p\r\n        contentEditable={props.rename}\r\n        onBlur={props.onRename}\r\n        onKeyPress={props.onRename}\r\n        className={classes.Title}\r\n      >\r\n        {props.title}\r\n      </p>\r\n      <p className={classes.Content}>{props.content}</p>\r\n      <p className={classes.Date}>{props.date}</p>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default noteItem\r\n","export const updateObject = (state, newObject) => {\r\n  return {\r\n    ...state,\r\n    ...newObject,\r\n  }\r\n}\r\n\r\nexport function debounce(fn, time) {\r\n  let timeout\r\n  return (...args) => {\r\n    const later = () => {\r\n      clearTimeout(timeout)\r\n\r\n      fn.apply(this, args)\r\n    }\r\n    clearTimeout(timeout)\r\n    timeout = setTimeout(later, time)\r\n  }\r\n}\r\n\r\nexport function getDifferenceBetweenArrays(prevArr, newArr) {\r\n  if (prevArr === newArr) {\r\n    return {\r\n      isDiffer: false,\r\n      updated: [],\r\n      deleted: [],\r\n    }\r\n  }\r\n\r\n  const deleted = prevArr.filter(prevObj => {\r\n    return !newArr.some(function (newObj) {\r\n      return prevObj.id === newObj.id\r\n    })\r\n  })\r\n\r\n  const updated = newArr.filter(newObj => !prevArr.includes(newObj))\r\n\r\n  const response = {\r\n    isDiffer: updated.length || deleted.length,\r\n    updated: updated,\r\n    deleted: deleted,\r\n  }\r\n\r\n  return response\r\n}\r\n\r\nexport function stripHtml(html) {\r\n  var tmp = document.createElement(\"DIV\")\r\n  tmp.innerHTML = html\r\n  return tmp.textContent || tmp.innerText || \"\"\r\n}\r\n","import React from \"react\"\r\nimport NoteItem from \"./NoteItem/NoteItem\"\r\nimport classes from \"./NoteItems.module.css\"\r\nimport { stripHtml } from \"../../shared/utility\"\r\nimport moment from \"moment\"\r\n\r\nconst NoteItems = props => {\r\n  const jsxNotes = props.notes.map(note => {\r\n    return (\r\n      <NoteItem\r\n        leftClicked={event => props.showContext(event, \"note\", note.id)}\r\n        active={note.id === props.current}\r\n        onRename={props.onEndRename}\r\n        rename={note.id === props.renameId}\r\n        key={note.id}\r\n        clicked={() => props.select(note.id)}\r\n        title={note.title}\r\n        content={stripHtml(note.content.slice(0, 50))}\r\n        date={moment(note.date).fromNow()}\r\n      />\r\n    )\r\n  })\r\n\r\n  return <ul className={classes.NoteItems}>{jsxNotes}</ul>\r\n}\r\n\r\nexport default NoteItems\r\n","import React from \"react\"\r\n\r\nimport classes from \"./FolderItem.module.css\"\r\n\r\nconst folderItem = props => {\r\n  const classNames = [classes.FolderItem]\r\n  if (props.active) {\r\n    classNames.push(classes.Active)\r\n  }\r\n  return (\r\n    <li\r\n      \r\n      onContextMenu={props.leftClicked}\r\n      onClickCapture={props.clicked}\r\n      className={classNames.join(\" \")}\r\n      style={{ color: props.color }}\r\n    >\r\n      <span className={\"material-icons \" + classes.Icon}>{props.icon}</span>\r\n      <p \r\n      contentEditable={props.rename}\r\n      onBlur={props.onRename}\r\n      onKeyPress={props.onRename}\r\n      className={classes.Name}>{props.name}</p>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default folderItem\r\n","export const initialFolder = {\r\n  name: \"New Folder\",\r\n  color: \"#ccc\",\r\n  icon: \"folder\",\r\n}\r\n\r\nexport const initialNote = {\r\n  content: \"\",\r\n  date: \"Not provided\",\r\n  title: \"New Note\",\r\n}\r\n\r\nexport const TRASH_ID = \"TRASH\"\r\nexport const UNSORTED_ID = \"UNSORTED\"\r\nexport const ALL_NOTES_ID = \"ALL_NOTES\"\r\n\r\nexport const folderOptions = [\r\n  {\r\n    name: \"Rename\",\r\n    action: \"Rename\",\r\n  },\r\n  {\r\n    name: \"Delete\",\r\n    action: \"Delete\",\r\n  },\r\n  {\r\n    isTable: true,\r\n    name: \"Colors\",\r\n    buttons: [\r\n      {\r\n        backgroundColor: \"#1abc9c\",\r\n        action: { backgroundColor: \"#1abc9c\" },\r\n      },\r\n      {\r\n        backgroundColor: \"#2ecc71\",\r\n        action: { backgroundColor: \"#2ecc71\" },\r\n      },\r\n      {\r\n        backgroundColor: \"#3498db\",\r\n        action: { backgroundColor: \"#3498db\" },\r\n      },\r\n      {\r\n        backgroundColor: \"#9b59b6\",\r\n        action: { backgroundColor: \"#9b59b6\" },\r\n      },\r\n      {\r\n        backgroundColor: \"#34495e\",\r\n        action: { backgroundColor: \"#34495e\" },\r\n      },\r\n      {\r\n        backgroundColor: \"#16a085\",\r\n        action: { backgroundColor: \"#16a085\" },\r\n      },\r\n      {\r\n        backgroundColor: \"#27ae60\",\r\n        action: { backgroundColor: \"#27ae60\" },\r\n      },\r\n      {\r\n        backgroundColor: \"#2980b9\",\r\n        action: { backgroundColor: \"#2980b9\" },\r\n      },\r\n      {\r\n        backgroundColor: \"#8e44ad\",\r\n        action: { backgroundColor: \"#8e44ad\" },\r\n      },\r\n      {\r\n        backgroundColor: \"#2c3e50\",\r\n        action: { backgroundColor: \"#2c3e50\" },\r\n      },\r\n      {\r\n        backgroundColor: \"#f1c40f\",\r\n        action: { backgroundColor: \"#f1c40f\" },\r\n      },\r\n      {\r\n        backgroundColor: \"#e67e22\",\r\n        action: { backgroundColor: \"#e67e22\" },\r\n      },\r\n      {\r\n        backgroundColor: \"#e74c3c\",\r\n        action: { backgroundColor: \"#e74c3c\" },\r\n      },\r\n      {\r\n        backgroundColor: \"#ecf0f1\",\r\n        action: { backgroundColor: \"#ecf0f1\" },\r\n      },\r\n      {\r\n        backgroundColor: \"#95a5a6\",\r\n        action: { backgroundColor: \"#95a5a6\" },\r\n      },\r\n      {\r\n        backgroundColor: \"#f39c12\",\r\n        action: { backgroundColor: \"#f39c12\" },\r\n      },\r\n      {\r\n        backgroundColor: \"#d35400\",\r\n        action: { backgroundColor: \"#d35400\" },\r\n      },\r\n      {\r\n        backgroundColor: \"#c0392b\",\r\n        action: { backgroundColor: \"#c0392b\" },\r\n      },\r\n      {\r\n        backgroundColor: \"#bdc3c7\",\r\n        action: { backgroundColor: \"#bdc3c7\" },\r\n      },\r\n      {\r\n        backgroundColor: \"#7f8c8d\",\r\n        action: { backgroundColor: \"#7f8c8d\" },\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    isTable: true,\r\n    name: \"Icon\",\r\n    buttons: [\r\n      {\r\n        icon: \"outlet\",\r\n        action: { icon: \"outlet\" },\r\n      },\r\n      {\r\n        icon: \"accessibility\",\r\n        action: { icon: \"accessibility\" },\r\n      },\r\n      {\r\n        icon: \"accessible\",\r\n        action: { icon: \"accessible\" },\r\n      },\r\n      {\r\n        icon: \"alarm_on\",\r\n        action: { icon: \"alarm_on\" },\r\n      },\r\n      {\r\n        icon: \"assignment\",\r\n        action: { icon: \"assignment\" },\r\n      },\r\n      {\r\n        icon: \"face\",\r\n        action: { icon: \"face\" },\r\n      },\r\n      {\r\n        icon: \"get_app\",\r\n        action: { icon: \"get_app\" },\r\n      },\r\n      {\r\n        icon: \"schedule\",\r\n        action: { icon: \"schedule\" },\r\n      },\r\n      {\r\n        icon: \"shopping_cart\",\r\n        action: { icon: \"shopping_cart\" },\r\n      },\r\n      {\r\n        icon: \"thumb_up\",\r\n        action: { icon: \"thumb_up\" },\r\n      },\r\n      {\r\n        icon: \"thumb_down\",\r\n        action: { icon: \"thumb_down\" },\r\n      },\r\n      {\r\n        icon: \"rss_feed\",\r\n        action: { icon: \"thumb_down\" },\r\n      },\r\n      {\r\n        icon: \"visibility\",\r\n        action: { icon: \"visibility\" },\r\n      },\r\n      {\r\n        icon: \"error\",\r\n        action: { icon: \"error\" },\r\n      },\r\n      {\r\n        icon: \"call\",\r\n        action: { icon: \"call\" },\r\n      },\r\n      {\r\n        icon: \"clear\",\r\n        action: { icon: \"clear\" },\r\n      },\r\n      {\r\n        icon: \"mail\",\r\n        action: { icon: \"mail\" },\r\n      },\r\n      {\r\n        icon: \"weekend\",\r\n        action: { icon: \"weekend\" },\r\n      },\r\n      {\r\n        icon: \"attach_money\",\r\n        action: { icon: \"attach_money\" },\r\n      },\r\n      {\r\n        icon: \"tag_faces\",\r\n        action: { icon: \"tag_faces\" },\r\n      },\r\n    ],\r\n  },\r\n]\r\n\r\nexport const noteOptions = [\r\n  {\r\n    name: \"Rename\",\r\n    action: \"Rename\",\r\n  },\r\n  {\r\n    name: \"Delete\",\r\n    action: \"Delete\",\r\n  },\r\n]\r\n\r\nexport const trashOptions = [\r\n  {\r\n    name: \"Clear\",\r\n    action: \"Clear\",\r\n  },\r\n]\r\n","import React from \"react\"\r\n\r\nimport classes from \"./FolderItems.module.css\"\r\nimport FolderItem from \"./FolderItem/FolderItem\"\r\nimport { TRASH_ID, UNSORTED_ID, ALL_NOTES_ID } from \"../../shared/constants\"\r\n\r\nconst folderItems = props => {\r\n  const jsxFolders = props.folders.map(folder => {\r\n    return (\r\n      <FolderItem\r\n        leftClicked={event => props.showContext(event, \"folder\", folder.id)}\r\n        active={folder.id === props.current}\r\n        onRename={props.onEndRename}\r\n        rename={folder.id === props.renameId}\r\n        clicked={() => props.select(folder.id)}\r\n        key={folder.id}\r\n        icon={folder.icon}\r\n        color={folder.color}\r\n        name={folder.name}\r\n      ></FolderItem>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <ul className={classes.FolderItems}>\r\n      <FolderItem\r\n        active={UNSORTED_ID === props.current}\r\n        clicked={() => props.select(UNSORTED_ID)}\r\n        key={UNSORTED_ID}\r\n        icon={\"topic\"}\r\n        color={\"#ccc\"}\r\n        name={\"Unsorted\"}\r\n      ></FolderItem>\r\n      <FolderItem\r\n        active={ALL_NOTES_ID === props.current}\r\n        clicked={() => props.select(ALL_NOTES_ID)}\r\n        key={ALL_NOTES_ID}\r\n        icon={\"rule_folder\"}\r\n        color={\"#ccc\"}\r\n        name={\"All\"}\r\n      ></FolderItem>\r\n\r\n      {jsxFolders}\r\n\r\n      <FolderItem\r\n        active={false}\r\n        clicked={() => props.addFolder({})}\r\n        key={\"__ADD_FOLDER\"}\r\n        icon={\"create_new_folder\"}\r\n        color={\"#ccc\"}\r\n        name={\"Add folder\"}\r\n      ></FolderItem>\r\n\r\n      <FolderItem\r\n        leftClicked={event => props.showContext(event, \"folder\", TRASH_ID)}\r\n        active={TRASH_ID === props.current}\r\n        clicked={() => props.select(TRASH_ID)}\r\n        key={TRASH_ID}\r\n        icon={\"delete\"}\r\n        color={\"#ccc\"}\r\n        name={\"Trash\"}\r\n      ></FolderItem>\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default folderItems\r\n","import * as firebase from \"firebase/app\"\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\"\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDvc6lij9iMoZ8tDBfLghISPKJtqx_L54U\",\r\n  authDomain: \"tinote-5fd77.firebaseapp.com\",\r\n  databaseURL: \"https://tinote-5fd77.firebaseio.com\",\r\n  projectId: \"tinote-5fd77\",\r\n  storageBucket: \"tinote-5fd77.appspot.com\",\r\n  messagingSenderId: \"207256672485\",\r\n  appId: \"1:207256672485:web:94c7f77f99e19706da9c0c\"\r\n}\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase\r\n","import { getDifferenceBetweenArrays } from \"./shared/utility\"\r\nimport firebase from \"./myFirebase\"\r\n\r\nexport class FirebaseDBClient {\r\n  constructor() {\r\n    this.notes = []\r\n    this.folders = []\r\n    this.db = firebase.firestore()\r\n    this.init()\r\n  }\r\n\r\n  async init() {\r\n    await this.db\r\n    // this.db.collection(\"notes\").onSnapshot(function (querySnapshot) {\r\n    //   querySnapshot.docChanges().forEach(function (change) {\r\n    //     if (change.type === \"added\") {\r\n    //       console.log(\"New city: \", change.doc.data())\r\n    //     }\r\n    //     if (change.type === \"modified\") {\r\n    //       console.log(\"Modified city: \", change.doc.data())\r\n    //     }\r\n    //     if (change.type === \"removed\") {\r\n    //       console.log(\"Removed city: \", change.doc.data())\r\n    //     }\r\n    //   })\r\n    // })\r\n  }\r\n\r\n  async _registerListener(collection, listenerFn) {\r\n    await this.db\r\n    this.db.collection(collection).onSnapshot(function (snapshot) {\r\n      const updated = []\r\n      const deleted = []\r\n      snapshot.docChanges().forEach(change => {\r\n        if (change.type === \"removed\") {\r\n          deleted.push({id: change.doc.id })\r\n        } else {\r\n          updated.push({ ...change.doc.data(), id: change.doc.id })\r\n        }\r\n        \r\n      })\r\n      listenerFn(updated, deleted)\r\n    })\r\n  }\r\n\r\n  registerNotesListener(listenerFn) {\r\n    console.log(\"register\")\r\n    this._registerListener(\"notes\", listenerFn)\r\n  }\r\n\r\n  registerFoldersListener(listenerFn) {\r\n    this._registerListener(\"folders\", listenerFn)\r\n  }\r\n\r\n  getId(collectionName) {\r\n    return this.db.collection(collectionName).doc().id\r\n  }\r\n\r\n  save({ notes, folders }) {\r\n    let notesDiff\r\n    let foldersDiff\r\n    if (!notes) {\r\n      notesDiff = getDifferenceBetweenArrays(this.notes, this.notes)\r\n    } else {\r\n      notesDiff = getDifferenceBetweenArrays(this.notes, notes)\r\n    }\r\n    if (!folders) {\r\n      foldersDiff = getDifferenceBetweenArrays(this.folders, this.folders)\r\n    } else {\r\n      foldersDiff = getDifferenceBetweenArrays(this.folders, folders)\r\n    }\r\n    if (!notesDiff.isDiffer && !foldersDiff.isDiffer) {\r\n      console.log(\"FIREthis.db ISNT DIFFER\")\r\n      return new Promise(resolve => resolve(true))\r\n    }\r\n\r\n    console.log(notesDiff)\r\n    return new Promise((resolve, reject) => {\r\n      const batch = this.db.batch()\r\n\r\n      foldersDiff.deleted.forEach(folder => {\r\n        const docRef = this.db.collection(\"folders\").doc(folder.id)\r\n        batch.delete(docRef)\r\n      })\r\n\r\n      notesDiff.deleted.forEach(note => {\r\n        const docRef = this.db.collection(\"notes\").doc(note.id)\r\n        batch.delete(docRef)\r\n      })\r\n\r\n      foldersDiff.updated.forEach(folder => {\r\n        const docRef = this.db.collection(\"folders\").doc(folder.id)\r\n        batch.set(docRef, {\r\n          name: folder.name,\r\n          color: folder.color,\r\n          icon: folder.icon,\r\n        })\r\n      })\r\n      notesDiff.updated.forEach(note => {\r\n        const docRef = this.db.collection(\"notes\").doc(note.id)\r\n        batch.set(docRef, {\r\n          title: note.title,\r\n          content: note.content,\r\n          folder: note.folder,\r\n          date: note.date,\r\n        })\r\n      })\r\n\r\n      batch\r\n        .commit()\r\n        .then(response => {\r\n          if (notes) {\r\n            this.notes = notes\r\n          }\r\n          if (folders) {\r\n            this.folders = folders\r\n          }\r\n\r\n          resolve(response)\r\n        })\r\n        .catch(error => {\r\n          // console.log(error)\r\n          reject(error)\r\n        })\r\n    })\r\n  }\r\n\r\n  get(collection) {\r\n    return new Promise((resolve, reject) => {\r\n      this.db\r\n        .collection(collection)\r\n        .get()\r\n        .then(querySnapshot => {\r\n          const docs = []\r\n          querySnapshot.forEach(doc => {\r\n            docs.push({ ...doc.data(), id: doc.id })\r\n          })\r\n          if (collection === \"folders\") {\r\n            this.folders = docs\r\n          }\r\n          if (collection === \"notes\") {\r\n            this.notes = docs\r\n          }\r\n          resolve(docs)\r\n        })\r\n        .catch(error => {\r\n          reject(error)\r\n        })\r\n    })\r\n  }\r\n}\r\n\r\nconst fireDB = new FirebaseDBClient()\r\n\r\nexport default fireDB\r\n","import * as actionTypes from \"./actionTypes\"\r\nimport FireDB from \"../../FirebaseDBClient\"\r\n\r\nexport const addNote = note => {\r\n  return {\r\n    type: actionTypes.ADD_NOTE,\r\n    note: {\r\n      ...note,\r\n      id: FireDB.getId(\"notes\"),\r\n    },\r\n  }\r\n}\r\n\r\nexport const selectNote = id => {\r\n  return {\r\n    type: actionTypes.SELECT_NOTE,\r\n    id,\r\n  }\r\n}\r\n\r\nexport const renameNote = (id, newName) => {\r\n  return {\r\n    type: actionTypes.RENAME_NOTE,\r\n    id,\r\n    newName,\r\n  }\r\n}\r\n\r\nexport const moveNoteToTrash = id => {\r\n  return {\r\n    type: actionTypes.MOVE_TO_TRASH_NOTE,\r\n    id,\r\n  }\r\n}\r\n\r\nexport const inputText = (id, text) => {\r\n  return {\r\n    type: actionTypes.INPUT_TEXT,\r\n    id,\r\n    text,\r\n  }\r\n}\r\n\r\nexport const fetchNotesStart = () => {\r\n  return {\r\n    type: actionTypes.FETCH_NOTES_START,\r\n  }\r\n}\r\n\r\nexport const fetchNotesSuccess = notes => {\r\n  return {\r\n    type: actionTypes.FETCH_NOTES_SUCCESS,\r\n    notes,\r\n    date: new Date().getTime()\r\n  }\r\n}\r\n\r\nexport const fetchNotesFail = error => {\r\n  return {\r\n    type: actionTypes.FETCH_NOTES_FAIL,\r\n    error,\r\n  }\r\n}\r\n\r\nexport const fetchNotes = () => {\r\n  return dispatch => {\r\n    dispatch(fetchNotesStart())\r\n    FireDB.get(\"notes\")\r\n      .then(response => {\r\n        dispatch(fetchNotesSuccess(response))\r\n      })\r\n      .catch(error => {\r\n        dispatch(fetchNotesFail(error))\r\n      })\r\n  }\r\n}\r\n\r\nexport const clearNotesInTrash = () => {\r\n  return {\r\n    type: actionTypes.CLEAR_NOTES_IN_TRASH,\r\n  }\r\n}\r\n\r\nexport const updateNotesStart = () => {\r\n  return {\r\n    type: actionTypes.UPDATE_NOTES_START,\r\n  }\r\n}\r\n\r\nexport const updateNotesSuccess = () => {\r\n  return {\r\n    type: actionTypes.UPDATE_NOTES_SUCCESS,\r\n    date: new Date().getTime()\r\n  }\r\n}\r\n\r\nexport const updateNotesFail = error => {\r\n  return {\r\n    type: actionTypes.UPDATE_NOTES_FAIL,\r\n    error,\r\n  }\r\n}\r\n\r\nexport const updateNotes = notes => {\r\n  return (dispatch, getState) => {\r\n    const notesState =  getState().notes\r\n    if (+notesState.lastUpdateFromClient > +notesState.lastUpdateFromServer) {\r\n      dispatch(updateNotesStart())\r\n      FireDB.save({ notes: notes })\r\n        .then(response => {\r\n          dispatch(updateNotesSuccess())\r\n        })\r\n        .catch(error => {\r\n          dispatch(updateNotesFail(error))\r\n        })\r\n    } else {\r\n      dispatch(updateNotesSuccess())\r\n    }\r\n  }\r\n}\r\n\r\nexport const syncNotesFromServer = (updated,  deleted) => {\r\n  return {\r\n    type: actionTypes.SYNC_NOTES_FROM_SERVER,\r\n    updated, \r\n    deleted,\r\n    date: new Date().getTime()\r\n  }\r\n}\r\n\r\nexport const initListenForSyncNotes = () => {\r\n  return dispatch => {\r\n    FireDB.registerNotesListener((updated, deleted) => dispatch(syncNotesFromServer(updated, deleted)))\r\n  }\r\n}\r\n","export const ADD_FOLDER = \"ADD_FOLDER\"\r\nexport const REMOVE_FOLDER = \"REMOVE_FOLDER\"\r\nexport const RENAME_FOLDER = \"RENAME_FOLDER\"\r\nexport const SELECT_FOLDER = \"SELECT_FOLDER\"\r\nexport const CHANGE_FOLDER_COLOR = \"CHANGE_FOLDER_COLOR\"\r\nexport const CHANGE_FOLDER_ICON = \"CHANGE_FOLDER_ICON\"\r\n\r\nexport const FETCH_FOLDERS_START = \"FETCH_FOLDERS_START\"\r\nexport const FETCH_FOLDERS_SUCCESS = \"FETCH_FOLDERS_SUCCESS\"\r\nexport const FETCH_FOLDERS_FAIL = \"FETCH_FOLDERS_FAIL\"\r\n\r\nexport const UPDATE_FOLDERS_START = \"UPDATE_FOLDERS_START\"\r\nexport const UPDATE_FOLDERS_SUCCESS = \"UPDATE_FOLDERS_SUCCESS\"\r\nexport const UPDATE_FOLDERS_FAIL = \"UPDATE_FOLDERS_FAIL\"\r\n\r\nexport const SYNC_FOLDERS_FROM_SERVER = \"SYNC_FOLDERS_FROM_SERVER\"\r\n\r\nexport const ADD_NOTE = \"ADD_NOTE\"\r\nexport const MOVE_TO_TRASH_NOTE = \"MOVE_TO_TRASH_NOTE\"\r\nexport const RENAME_NOTE = \"RENAME_NOTE\"\r\nexport const SELECT_NOTE = \"SELECT_NOTE\"\r\nexport const INPUT_TEXT = \"INPUT_TEXT\"\r\nexport const CLEAR_NOTES_IN_TRASH = \"CLEAR_NOTES_IN_TRASH\"\r\n\r\nexport const FETCH_NOTES_START = \"FETCH_NOTE_START\"\r\nexport const FETCH_NOTES_SUCCESS = \"FETCH_NOTE_SUCCESS\"\r\nexport const FETCH_NOTES_FAIL = \"FETCH_NOTE_FAIL\"\r\n\r\nexport const UPDATE_NOTES_START = \"UPDATE_NOTE_START\"\r\nexport const UPDATE_NOTES_SUCCESS = \"UPDATE_NOTE_SUCCESS\"\r\nexport const UPDATE_NOTES_FAIL = \"UPDATE_NOTE_FAIL\"\r\n\r\nexport const SYNC_NOTES_FROM_SERVER = \"SYNC_NOTES_FROM_SERVER\"\r\n\r\nexport const AUTH_START = \"AUTH_START\"\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\"\r\nexport const AUTH_FAIL = \"AUTH_FAIL\"\r\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\"\r\n","import * as actionTypes from \"./actionTypes\"\r\nimport FireDB from \"../../FirebaseDBClient\"\r\n\r\nexport const addFolder = folder => {\r\n  return {\r\n    type: actionTypes.ADD_FOLDER,\r\n    folder: {\r\n      ...folder,\r\n      id: FireDB.getId(\"folders\"),\r\n    },\r\n  }\r\n}\r\n\r\nexport const selectFolder = id => {\r\n  return {\r\n    type: actionTypes.SELECT_FOLDER,\r\n    id,\r\n  }\r\n}\r\n\r\nexport const renameFolder = (id, newName) => {\r\n  return {\r\n    type: actionTypes.RENAME_FOLDER,\r\n    id,\r\n    newName,\r\n  }\r\n}\r\n\r\nexport const removeFolder = id => {\r\n  return {\r\n    type: actionTypes.REMOVE_FOLDER,\r\n    id,\r\n  }\r\n}\r\n\r\nexport const changeFolderIcon = (id, icon) => {\r\n  return {\r\n    type: actionTypes.CHANGE_FOLDER_ICON,\r\n    id,\r\n    icon,\r\n  }\r\n}\r\n\r\nexport const changeFolderColor = (id, color) => {\r\n  return {\r\n    type: actionTypes.CHANGE_FOLDER_COLOR,\r\n    id,\r\n    color,\r\n  }\r\n}\r\n\r\nexport const fetchFoldersStart = () => {\r\n  return {\r\n    type: actionTypes.FETCH_FOLDERS_START,\r\n  }\r\n}\r\n\r\nexport const fetchFoldersSuccess = folders => {\r\n  return {\r\n    type: actionTypes.FETCH_FOLDERS_SUCCESS,\r\n    folders,\r\n    date: new Date().getTime()\r\n  }\r\n}\r\n\r\nexport const fetchFoldersFail = error => {\r\n  return {\r\n    type: actionTypes.FETCH_FOLDERS_FAIL,\r\n    error,\r\n  }\r\n}\r\n\r\nexport const fetchFolders = () => {\r\n  return dispatch => {\r\n    dispatch(fetchFoldersStart())\r\n    FireDB.get(\"folders\")\r\n      .then(response => {\r\n        dispatch(fetchFoldersSuccess(response))\r\n      })\r\n      .catch(error => {\r\n        dispatch(fetchFoldersFail(error))\r\n      })\r\n  }\r\n}\r\n\r\nexport const updateFoldersStart = () => {\r\n  return {\r\n    type: actionTypes.UPDATE_FOLDERS_START,\r\n  }\r\n}\r\n\r\nexport const updateFoldersSuccess = () => {\r\n  return {\r\n    type: actionTypes.UPDATE_FOLDERS_SUCCESS,\r\n    date: new Date().getTime()\r\n  }\r\n}\r\n\r\nexport const updateFoldersFail = error => {\r\n  return {\r\n    type: actionTypes.UPDATE_FOLDERS_FAIL,\r\n    error,\r\n  }\r\n}\r\n\r\nexport const updateFolders = folders => {\r\n  return (dispatch, getState) => {\r\n    const foldersState =  getState().folders\r\n    if (+foldersState.lastUpdateFromClient > +foldersState.lastUpdateFromServer) {\r\n    dispatch(updateFoldersStart())\r\n    FireDB.save({ folders: folders })\r\n      .then(response => {\r\n        dispatch(updateFoldersSuccess(response))\r\n      })\r\n      .catch(error => {\r\n        dispatch(updateFoldersFail(error))\r\n      })\r\n  } else {\r\n    dispatch(updateFoldersSuccess())\r\n  } \r\n}\r\n}\r\n\r\nexport const syncFoldersFromServer = (updated, deleted) => {\r\n  return {\r\n    type: actionTypes.SYNC_FOLDERS_FROM_SERVER,\r\n    updated,\r\n    deleted,\r\n    date: new Date().getTime()\r\n  }\r\n}\r\n\r\nexport const initListenForSyncFolders = () => {\r\n  return dispatch => {\r\n    FireDB.registerFoldersListener((updated, deleted) => dispatch(syncFoldersFromServer(updated, deleted)))\r\n  }\r\n}\r\n","import firebase from \"./myFirebase\"\r\n\r\nexport default firebase.auth()\r\n","import * as actionTypes from \"./actionTypes\"\r\nimport auth from \"../../myAuth\"\r\n\r\nexport const authSuccess = () => {\r\n  return {\r\n    type: actionTypes.AUTH_SUCCESS,\r\n  }\r\n}\r\n\r\nexport const authStart = () => {\r\n  return {\r\n    type: actionTypes.AUTH_START,\r\n  }\r\n}\r\n\r\nexport const authLogout = () => {\r\n  return {\r\n    type: actionTypes.AUTH_LOGOUT,\r\n  }\r\n}\r\n\r\nexport const authFail = error => {\r\n  return {\r\n    type: actionTypes.AUTH_FAIL,\r\n    error,\r\n  }\r\n}\r\n\r\nexport const signIn = (email, password) => {\r\n  return dispatch => {\r\n    dispatch(authStart())\r\n    auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(response => {\r\n        dispatch(authSuccess())\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n        dispatch(authFail(error))\r\n      })\r\n  }\r\n}\r\n\r\nexport const signUp = (email, password) => {\r\n  return dispatch => {\r\n    dispatch(authStart())\r\n    auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then(response => {\r\n        dispatch(authSuccess())\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n        dispatch(authFail(error))\r\n      })\r\n  }\r\n}\r\n\r\nexport const checkAuthState = () => {\r\n  return dispatch => {\r\n    dispatch(authStart())\r\n    auth.onAuthStateChanged(function (user) {\r\n      if (user) {\r\n        dispatch(authSuccess())\r\n      } else {\r\n        dispatch(authLogout())\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const logout = () => {\r\n  return dispatch => {\r\n    dispatch(authStart())\r\n    auth\r\n      .signOut()\r\n      .then(res => {\r\n        dispatch(authLogout())\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n        dispatch(authFail(error))\r\n      })\r\n  }\r\n}\r\n","import React, { Component } from \"react\"\r\n\r\nimport NoteItems from \"../../../components/NoteItems/NoteItems\"\r\nimport FolderItems from \"../../../components/FolderItems/FolderItems\"\r\nimport classes from \"./Explorer.module.css\"\r\nimport { connect } from \"react-redux\"\r\nimport * as actions from \"../../../store/actions/index\"\r\nimport { debounce } from \"../../../shared/utility\"\r\nimport {\r\n  initialFolder,\r\n  ALL_NOTES_ID,\r\n  TRASH_ID,\r\n} from \"../../../shared/constants\"\r\n// import _ from \"lodash\"\r\nimport { RenameContext } from \"../Tinote\"\r\n\r\nclass Explorer extends Component {\r\n  state = {\r\n    renameNoteId: null,\r\n    renameFolderId: null,\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onFetchFolders()\r\n    this.props.onFetchNotes()\r\n\r\n    this.updateFolders = debounce(this.updateFolders, 2000)\r\n    this.updateNotes = debounce(this.updateNotes, 3000)\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.folders !== this.props.folders && prevProps.folders !== []) {\r\n      this.updateFolders()\r\n    }\r\n    if (prevProps.notes !== this.props.notes && prevProps.notes !== []) {\r\n      this.updateNotes()\r\n    }\r\n  }\r\n\r\n  updateFolders = () => {\r\n    this.props.onUpdateFolders(this.props.folders)\r\n  }\r\n\r\n  updateNotes = () => {\r\n    this.props.onUpdateNotes(this.props.notes)\r\n  }\r\n\r\n  selectNoteHandler = id => {\r\n    this.props.onSelectNote(id)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.Explorer}>\r\n        <RenameContext.Consumer>\r\n          {({ type, id, renameEndHandler }) => (\r\n            <React.Fragment>\r\n              <FolderItems\r\n                onEndRename={event => renameEndHandler(event)}\r\n                renameId={type === \"folder\" ? id : null}\r\n                showContext={this.props.showContextMenu}\r\n                addFolder={() =>\r\n                  this.props.onAddFolder({\r\n                    ...initialFolder,\r\n                  })\r\n                }\r\n                current={this.props.currentFolder}\r\n                select={this.props.onSelectFolder}\r\n                folders={this.props.folders}\r\n              />\r\n              <NoteItems\r\n                 onEndRename={event => renameEndHandler(event)}\r\n                 renameId={type === \"note\" ? id : null}\r\n                showContext={this.props.showContextMenu}\r\n                current={this.props.currentNote}\r\n                select={this.props.onSelectNote}\r\n                notes={\r\n                  this.props.currentFolder === ALL_NOTES_ID\r\n                    ? this.props.notes.filter(n => n.folder !== TRASH_ID)\r\n                    : this.props.notes.filter(\r\n                        n => n.folder === this.props.currentFolder\r\n                      )\r\n                }\r\n              />\r\n            </React.Fragment>\r\n          )}\r\n        </RenameContext.Consumer>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    folders: state.folders.folders,\r\n    currentFolder: state.folders.currentFolder,\r\n    notes: state.notes.notes,\r\n    currentNote: state.notes.currentNote,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSelectFolder: id => dispatch(actions.selectFolder(id)),\r\n    onAddFolder: folder => dispatch(actions.addFolder(folder)),\r\n    onRenameFolder: (id, newName) =>\r\n      dispatch(actions.renameFolder(id, newName)),\r\n\r\n    onFetchFolders: () => dispatch(actions.fetchFolders()),\r\n    onUpdateFolders: folders => dispatch(actions.updateFolders(folders)),\r\n\r\n    onSelectNote: id => dispatch(actions.selectNote(id)),\r\n    onRenameNote: (id, newName) => dispatch(actions.renameNote(id, newName)),\r\n\r\n    onFetchNotes: () => dispatch(actions.fetchNotes()),\r\n    onUpdateNotes: notes => dispatch(actions.updateNotes(notes)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Explorer)\r\n","import React from \"react\"\r\n\r\nimport classes from \"./NoteEditingToolbar.module.css\"\r\nimport ToolbarButton from \"../UI/ToolbarButton/ToolbarButton\"\r\n\r\nconst NoteEditingToolbar = props => {\r\n  const buttons = props.buttons.map((button, index) => {\r\n    return (\r\n      <ToolbarButton\r\n        key={index}\r\n        active={button.active}\r\n        btnType={button.icon}\r\n        clicked={() => {\r\n          if (button.active) {\r\n            props.toolbarBtnClicked(button.activeAction)\r\n          } else {\r\n            props.toolbarBtnClicked(button.inactiveAction)\r\n          }\r\n        }}\r\n      />\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className={classes.NoteEditingToolbar}>\r\n      <div className={classes.ArrowBack} onClick={props.arrowClicked}>\r\n        <span className=\"material-icons\">arrow_back_ios</span>\r\n      </div>\r\n      {buttons}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NoteEditingToolbar\r\n","import React, { Component } from \"react\"\r\n\r\nimport classes from \"./NoteEditor.module.css\"\r\nimport { connect } from \"react-redux\"\r\nimport * as actions from \"../../../store/actions/index\"\r\n// import Spinner from \"../../../components/UI/Spinner/Spinner\"\r\nimport ReactQuill from \"react-quill\"\r\nimport NoteEditingToolbar from \"../../../components/NoteEditingToolbar/NoteEditingToolbar\"\r\n\r\nconst quillModules = {\r\n  toolbar: [\r\n    [{ header: [1, 2, false] }],\r\n    [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\r\n    [\r\n      { list: \"ordered\" },\r\n      { list: \"bullet\" },\r\n      { indent: \"-1\" },\r\n      { indent: \"+1\" },\r\n    ],\r\n    [\"link\", \"image\"],\r\n    [\"clean\"],\r\n  ],\r\n}\r\n\r\nconst quillFormats = [\r\n  \"header\",\r\n  \"bold\",\r\n  \"italic\",\r\n  \"underline\",\r\n  \"strike\",\r\n  \"blockquote\",\r\n  \"list\",\r\n  \"bullet\",\r\n  \"indent\",\r\n  \"link\",\r\n  \"image\",\r\n]\r\n\r\nclass NoteEditor extends Component {\r\n  handleChange = value => {\r\n    if (this.props.currentNoteItem) {\r\n      this.props.onInputText(this.props.currentNoteItem.id, value)\r\n    }\r\n  }\r\n\r\n  arrowBackHancler = () => {\r\n    this.props.onSelectNote(null)\r\n  }\r\n\r\n  render() {\r\n    const quill = (\r\n      <ReactQuill\r\n        modules={quillModules}\r\n        formats={quillFormats}\r\n        readOnly={!this.props.currentNoteItem}\r\n        value={\r\n          this.props.currentNoteItem ? this.props.currentNoteItem.content : \"\"\r\n        }\r\n        className={classes.Quill}\r\n        placeholder=\"Create note and start writing...\"\r\n        onChange={this.handleChange}\r\n      />\r\n    )\r\n\r\n    let noteEditorClasses = [classes.NoteEditor]\r\n\r\n    if (this.props.isShow) {\r\n      noteEditorClasses.push(classes.ShowEditor)\r\n    }\r\n    return (\r\n      <div className={noteEditorClasses.join(\" \")}>\r\n        <NoteEditingToolbar\r\n          arrowClicked={this.arrowBackHancler}\r\n          toolbarBtnClicked={() => {}}\r\n          buttons={[]}\r\n        />\r\n        {quill}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    currentNote: state.notes.currentNote,\r\n    currentNoteItem: state.notes.notes.find(\r\n      n => n.id === state.notes.currentNote\r\n    ),\r\n    notes: state.notes.notes,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onInputText: (id, text) => dispatch(actions.inputText(id, text)),\r\n    onSelectNote: id => dispatch(actions.selectNote(id)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteEditor)\r\n","import React from \"react\"\r\nimport classes from \"./ContextMenu.module.css\"\r\n\r\nconst createSubMenu = (items, optionHandler) => {\r\n  const jsxItems = items.map((item, ind) => {\r\n    return (\r\n      <li\r\n        onClick={() => optionHandler(item.action)}\r\n        key={ind}\r\n        style={{ backgroundColor: item.backgroundColor, color: item.color }}\r\n      >\r\n        {item.icon && <span className=\"material-icons\">{item.icon}</span>}\r\n      </li>\r\n    )\r\n  })\r\n\r\n  return <ul className={classes.TableMenu}>{jsxItems}</ul>\r\n}\r\n\r\nconst contextMenu = props => {\r\n  const jsxOptions = props.options.map((option, index) => {\r\n    if (option.isTable) {\r\n      return (\r\n        <li key={index} className={classes.ContextMenuItem}>\r\n          {option.name}\r\n          {createSubMenu(option.buttons, props.optionHandler)}\r\n        </li>\r\n      )\r\n    } else {\r\n      return (\r\n        <li\r\n          onClick={() => props.optionHandler(option.action)}\r\n          key={index}\r\n          className={classes.ContextMenuItem}\r\n        >\r\n          {option.name}\r\n        </li>\r\n      )\r\n    }\r\n  })\r\n\r\n  const classNames = [classes.ContextMenu]\r\n\r\n  if (!props.show) {\r\n    classNames.push(classes.Hide)\r\n  } else {\r\n    document.addEventListener(\"click\", () => {\r\n      props.closed()\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={classNames.join(\" \")}\r\n      style={{ top: props.y, left: props.x }}\r\n    >\r\n      <ul className={classes.ContextMenuItems}>{jsxOptions}</ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default contextMenu\r\n","import React from \"react\"\r\n\r\nimport classes from \"./Backdrop.module.css\"\r\n\r\nconst backdrop = props => {\r\n  let backdrop = null\r\n  if (props.open) {\r\n    backdrop = <div className={classes.Backdrop} onClick={props.clicked}></div>\r\n  }\r\n\r\n  return backdrop\r\n}\r\n\r\nexport default backdrop\r\n","import React from \"react\"\r\nimport classes from \"./SideDrawer.module.css\"\r\nimport Backdrop from \"../../UI/Backdrop/Backdrop\"\r\n\r\nconst sideDrawer = props => {\r\n  const classNames = [classes.SideDrawer]\r\n  if (props.open) {\r\n    classNames.push(classes.Open)\r\n  } else {\r\n    classNames.push(classes.Close)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Backdrop open={props.open} clicked={props.close} />\r\n      <div className={classNames.join(\" \")}>{props.children}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default sideDrawer\r\n","import React, { Component } from \"react\"\r\n\r\nimport classes from \"./Tinote.module.css\"\r\nimport Menu from \"../../components/Menu/Menu\"\r\nimport Explorer from \"./Explorer/Explorer\"\r\nimport NoteEditor from \"./NoteEditor/NoteEditor\"\r\nimport { connect } from \"react-redux\"\r\nimport * as actions from \"../../store/actions/index\"\r\nimport {\r\n  initialNote,\r\n  TRASH_ID,\r\n  ALL_NOTES_ID,\r\n  trashOptions,\r\n  folderOptions,\r\n  noteOptions,\r\n  UNSORTED_ID,\r\n} from \"../../shared/constants\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport ContextMenu from \"../../components/UI/ContextMenu/ContextMenu\"\r\nimport SideDrawer from \"../../components/Navigation/SideDrawer/SideDrawer\"\r\n\r\nexport const RenameContext = React.createContext({\r\n  type: null,\r\n  id: null,\r\n  renameEndHandler: event => {},\r\n})\r\n\r\nclass Tinote extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.renameEndHandler = event => {\r\n      const text = event.target.textContent\r\n      const type = this.state.renameContext.type\r\n      const id = this.state.renameContext.id\r\n      if (\r\n        event.type === \"blur\" ||\r\n        (event.type === \"keypress\" && event.key === \"Enter\")\r\n      ) {\r\n        this.setState(prevState => {\r\n          return {\r\n            ...prevState,\r\n            renameContext: {\r\n              ...prevState.renameContext,\r\n              type: null,\r\n              id: null,\r\n            },\r\n          }\r\n        })\r\n        if (type === \"folder\") {\r\n          this.props.onRenameFolder(id, text)\r\n        } else {\r\n          this.props.onRenameNote(id, text)\r\n        }\r\n      }\r\n    }\r\n  \r\n    this.state = {\r\n      renameContext: {\r\n        type: null,\r\n        id: null,\r\n        renameEndHandler: this.renameEndHandler\r\n      },\r\n      contextMenu: {\r\n        x: -100,\r\n        y: -100,\r\n        show: false,\r\n        elemType: null,\r\n        id: null,\r\n      },\r\n      isSideDrawerOpen: false,\r\n    }\r\n\r\n  }\r\n\r\n  \r\n\r\n  contextMenuShowHandler = (event, elemType, id) => {\r\n    event.preventDefault()\r\n    const { pageX, pageY } = event\r\n    this.setState({\r\n      contextMenu: {\r\n        x: pageX,\r\n        y: pageY,\r\n        show: true,\r\n        elemType,\r\n        id,\r\n      },\r\n    })\r\n  }\r\n\r\n  contextMenuHideHandler = () => {\r\n    this.setState({\r\n      contextMenu: {\r\n        x: -100,\r\n        y: -100,\r\n        show: false,\r\n      },\r\n    })\r\n  }\r\n\r\n  toolbarNoteHandler = () => {\r\n    if (this.props.isTrashOpen) {\r\n      this.props.onClearTrash()\r\n    } else {\r\n      this.props.onAddNote({\r\n        ...initialNote,\r\n        date: Date.now(),\r\n        folder:\r\n          this.props.currentFolder !== ALL_NOTES_ID\r\n            ? this.props.currentFolder\r\n            : UNSORTED_ID,\r\n      })\r\n    }\r\n  }\r\n\r\n  contextMenuOptionHandler = action => {\r\n    this.contextMenuHideHandler()\r\n    const elemType = this.state.contextMenu.elemType\r\n    const id = this.state.contextMenu.id\r\n    switch (action) {\r\n      case \"Delete\":\r\n        if (elemType === \"folder\") {\r\n          this.props.onRemoveFolder(id)\r\n        } else if (elemType === \"note\") {\r\n          this.props.onMoveNoteToTrash(id)\r\n        }\r\n        break\r\n      case \"Rename\":\r\n        if (elemType === \"folder\" || elemType === \"note\") {\r\n          this.setState(prevState => {\r\n            return {\r\n              ...prevState,\r\n              renameContext: {\r\n                ...prevState.renameContext,\r\n                type: elemType,\r\n                id: id,\r\n              },\r\n            }\r\n          })\r\n        }\r\n        break\r\n      case \"Clear\":\r\n        if (elemType === \"folder\") {\r\n          this.props.onClearNotesInTrash()\r\n        } else if (elemType === \"note\") {\r\n          throw new Error(\r\n            \"Trying clear trash when contextMenu.elemType === note\"\r\n          )\r\n        }\r\n        break\r\n      default:\r\n        if (Object.keys(action)[0] === \"backgroundColor\") {\r\n          this.props.onChangeFolderColor(id, action[\"backgroundColor\"])\r\n        } else if (Object.keys(action)[0] === \"icon\") {\r\n          this.props.onChangeFolderIcon(id, action[\"icon\"])\r\n        }\r\n        break\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"COMPONENT DID MOUNT\")\r\n    setTimeout(() => {\r\n      this.props.onInitSyncNotes()\r\n      this.props.onInitSyncFolders()\r\n    })\r\n  }\r\n\r\n  openSideDrawerHandler = () => {\r\n    this.setState({\r\n      isSideDrawerOpen: true,\r\n    })\r\n  }\r\n\r\n  closeSideDrawerHandler = () => {\r\n    this.setState({\r\n      isSideDrawerOpen: false,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let authRedirect = null\r\n    if (!this.props.isAuth) {\r\n      authRedirect = <Redirect to=\"/\" />\r\n    }\r\n\r\n    let isEditorOpen = false\r\n    let wrapperStyles = [classes.Wrapper]\r\n    if (this.props.currentNote) {\r\n      isEditorOpen = true\r\n      wrapperStyles.push(classes.ShowEditor)\r\n    }\r\n    console.log(this.state.renameContext)\r\n    return (\r\n      <div className={classes.Tinote}>\r\n        {authRedirect}\r\n        <SideDrawer\r\n          open={this.state.isSideDrawerOpen}\r\n          close={this.closeSideDrawerHandler}\r\n        >\r\n          <p onClick={this.props.onLogout}>Logout</p>\r\n        </SideDrawer>\r\n        <ContextMenu\r\n          optionHandler={this.contextMenuOptionHandler}\r\n          closed={this.contextMenuHideHandler}\r\n          show={this.state.contextMenu.show}\r\n          x={this.state.contextMenu.x}\r\n          y={this.state.contextMenu.y}\r\n          options={\r\n            this.state.contextMenu.elemType === \"folder\"\r\n              ? this.state.contextMenu.id === TRASH_ID\r\n                ? trashOptions\r\n                : folderOptions\r\n              : noteOptions\r\n          }\r\n        />\r\n        <div className={wrapperStyles.join(\" \")}>\r\n          <Menu\r\n            openSideDrawer={this.openSideDrawerHandler}\r\n            toolbarBtnType={this.props.isTrashOpen ? \"delete\" : \"note_add\"}\r\n            toolbarButtonClicked={this.toolbarNoteHandler}\r\n          />\r\n          <RenameContext.Provider value={this.state.renameContext}>\r\n            <Explorer\r\n              contextElemType={this.state.contextMenu.elemType}\r\n              id={this.state.contextMenu.id}\r\n              showContextMenu={this.contextMenuShowHandler}\r\n            />\r\n          </RenameContext.Provider>\r\n        </div>\r\n        <NoteEditor isShow={isEditorOpen} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isTrashOpen: state.folders.currentFolder === TRASH_ID,\r\n    currentFolder: state.folders.currentFolder,\r\n    isAuth: state.auth.isAuth,\r\n    currentNote: state.notes.currentNote,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAddNote: note => dispatch(actions.addNote(note)),\r\n    onLogout: () => dispatch(actions.logout()),\r\n    onClearTrash: () => dispatch(actions.clearNotesInTrash()),\r\n    onInitSyncNotes: () => dispatch(actions.initListenForSyncNotes()),\r\n    onInitSyncFolders: () => dispatch(actions.initListenForSyncFolders),\r\n    onChangeFolderColor: (id, color) =>\r\n      dispatch(actions.changeFolderColor(id, color)),\r\n    onChangeFolderIcon: (id, icon) =>\r\n      dispatch(actions.changeFolderIcon(id, icon)),\r\n    onClearNotesInTrash: () => dispatch(actions.clearNotesInTrash()),\r\n    onRemoveFolder: id => dispatch(actions.removeFolder(id)),\r\n    onMoveNoteToTrash: id => dispatch(actions.moveNoteToTrash(id)),\r\n    onRenameFolder: (id, newName) => dispatch(actions.renameFolder(id, newName)),\r\n    onRenameNote: (id, newName) => dispatch(actions.renameNote(id, newName))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tinote)\r\n","import React from \"react\"\r\n\r\nimport classes from \"./Input.module.css\"\r\n\r\nconst input = props => {\r\n  const inputClasses = [classes.InputElement]\r\n\r\n  if (props.invalid) {\r\n    inputClasses.push(classes.Invalid)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.Input}>\r\n      <input\r\n        {...props.elemConfig}\r\n        className={inputClasses.join(\" \")}\r\n        type={props.type}\r\n        value={props.value}\r\n        onInput={props.onInput}\r\n        placeholder={props.placeholder}\r\n      ></input>\r\n      <span className={classes.Error}>{props.error}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default input\r\n","import React from \"react\"\r\nimport classes from \"./Button.module.css\"\r\n\r\nconst button = props => {\r\n  const classNames = [classes.Button]\r\n  classNames.push(classes[props.btnTupe])\r\n\r\n  return (\r\n    <button\r\n      type={props.type}\r\n      className={classNames.join(\" \")}\r\n      onClick={props.clicked}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default button\r\n","import React from \"react\"\r\n\r\nimport classes from \"./Spinner.module.css\"\r\n\r\nconst spinner = props => {\r\n  return <div className={classes.loader}>Loading...</div>\r\n}\r\n\r\nexport default spinner\r\n","import React from \"react\"\r\nimport Input from \"../../components/UI/Input/Input\"\r\nimport Button from \"../../components/UI/Button/Button\"\r\nimport validator from \"validator\"\r\nimport classes from \"./Auth.module.css\"\r\nimport * as actions from \"../../store/actions/index\"\r\nimport { connect } from \"react-redux\"\r\nimport { Redirect } from \"react-router\"\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\"\r\n\r\nclass Auth extends React.Component {\r\n  state = {\r\n    isEmailInvalid: false,\r\n    isPasswordInvalid: false,\r\n    isSignin: true,\r\n    emailValue: \"\",\r\n    passwordValue: \"\",\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onCheckAuthState()\r\n  }\r\n\r\n  emailInputHandler = event => {\r\n    if (!validator.isEmail(event.target.value)) {\r\n      if (!this.state.isEmailInvalid) {\r\n        this.setState({\r\n          isEmailInvalid: true,\r\n          emailValue: event.target.value,\r\n        })\r\n      }\r\n    } else {\r\n      if (this.state.isEmailInvalid) {\r\n        this.setState({\r\n          isEmailInvalid: false,\r\n          emailValue: event.target.value,\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  passwordInputHandler = event => {\r\n    if (\r\n      !validator.isLength(event.target.value, {\r\n        min: 6,\r\n        max: 24,\r\n      })\r\n    ) {\r\n      this.setState({\r\n        isPasswordInvalid: true,\r\n        passwordValue: event.target.value,\r\n      })\r\n    } else {\r\n      this.setState({\r\n        isPasswordInvalid: false,\r\n        passwordValue: event.target.value,\r\n      })\r\n    }\r\n  }\r\n\r\n  sumbitHandler = e => {\r\n    e.preventDefault()\r\n\r\n    if (!this.state.isEmailInvalid && !this.state.isPasswordInvalid) {\r\n      if (this.state.isSignin) {\r\n        this.props.onSignin(this.state.emailValue, this.state.passwordValue)\r\n      } else {\r\n        this.props.onSignup(this.state.emailValue, this.state.passwordValue)\r\n      }\r\n    }\r\n  }\r\n\r\n  switchModeHandler = e => {\r\n    e.preventDefault()\r\n\r\n    this.setState(prevState => {\r\n      return {\r\n        isSignin: !prevState.isSignin,\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let authRedirect = null\r\n    if (this.props.isAuth) {\r\n      authRedirect = <Redirect to=\"/tinote\"></Redirect>\r\n    }\r\n\r\n    let form = <Spinner />\r\n\r\n    if (!this.props.loading) {\r\n      form = (\r\n        <form onSubmit={this.sumbitHandler} className={classes.Auth}>\r\n          <Input\r\n            placeholder=\"Email\"\r\n            type=\"text\"\r\n            onInput={this.emailInputHandler}\r\n            invalid={this.state.isEmailInvalid}\r\n            error={this.state.isEmailInvalid ? \"Invalid email\" : null}\r\n          />\r\n          <Input\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n            onInput={this.passwordInputHandler}\r\n            invalid={this.state.isPasswordInvalid}\r\n            error={\r\n              this.state.isPasswordInvalid\r\n                ? \"Password must be min 6 characters\"\r\n                : null\r\n            }\r\n          />\r\n          <div className={classes.Buttons}>\r\n            <Button type={\"submit\"}>\r\n              {this.state.isSignin ? \"Signin\" : \"Signup\"}\r\n            </Button>\r\n            <Button type={\"button\"} clicked={this.switchModeHandler}>\r\n              Switch to {this.state.isSignin ? \"Signup\" : \"Signin\"}\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {authRedirect}\r\n        {form}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n    loading: state.auth.loading,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSignin: (email, password) => dispatch(actions.signIn(email, password)),\r\n    onSignup: (email, password) => dispatch(actions.signUp(email, password)),\r\n    onCheckAuthState: () => dispatch(actions.checkAuthState()),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth)\r\n","import React from \"react\"\r\nimport Layout from \"./hoc/Layout/Layout\"\r\nimport Tinote from \"./containers/Tinote/Tinote\"\r\nimport { Switch, Route, Redirect } from \"react-router-dom\"\r\nimport Auth from \"./containers/Auth/Auth\"\r\n\r\nfunction App() {\r\n  return (\r\n    <Layout>\r\n      <Switch>\r\n        <Route path=\"/auth\" component={Auth} />\r\n        <Route path=\"/tinote\" component={Tinote} />\r\n        <Redirect to=\"/auth\" />\r\n      </Switch>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import * as actionTypes from \"../actions/actionTypes\"\r\nimport {updateObject} from \"../../shared/utility\"\r\nimport { TRASH_ID } from \"../../shared/constants\"\r\nimport _ from \"lodash\"\r\n\r\nconst initialState = {\r\n  notes: [],\r\n  currentNote: null,\r\n  loading: false,\r\n  error: null,\r\n  lastUpdateFromClient: null,\r\n  lastUpdateFromServer: null\r\n}\r\n\r\nconst selectNote = (state, action) => {\r\n  return updateObject(state, {\r\n    currentNote: action.id\r\n  })\r\n}\r\n\r\nconst addNote = (state, action) => {\r\n  return updateObject(state, {\r\n    notes: state.notes.concat(action.note)\r\n  })\r\n}\r\n\r\nconst moveToTrashNote = (state, action) => {\r\n  return updateObject(state, {\r\n    notes: state.notes.map(n => {\r\n      if (n.id === action.id) {\r\n        return {\r\n          ...n,\r\n          folder: TRASH_ID\r\n        }\r\n      }\r\n      return n\r\n    })\r\n  })\r\n}\r\n\r\nconst inputText = (state, action) => {\r\n  return updateObject(state, {\r\n    notes: state.notes.map(n => {\r\n      if (n.id === action.id) {\r\n        return {\r\n          ...n,\r\n          content: action.text\r\n        }\r\n      }\r\n      return n\r\n    })\r\n  })\r\n}\r\n\r\nconst renameNote = (state, action) => {\r\n  // console.log(\"Rename reducer\")\r\n  // console.log(action)\r\n  return updateObject(state, {\r\n    notes: state.notes.map(n => {\r\n      if (n.id === action.id) {\r\n        return {\r\n          ...n,\r\n          title: action.newName\r\n        }\r\n      }\r\n      return n\r\n    })\r\n  })\r\n}\r\n\r\nconst fetchNotesStart = (state, action) => {\r\n  return updateObject(state, {\r\n    loading: true,\r\n    error: null\r\n  })\r\n}\r\n\r\nconst fetchNotesSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    // currentNote: action.notes.length ? action.notes[0].id : null,\r\n    currentNote: null,\r\n    notes: action.notes,\r\n    loading: false,\r\n    error: null,\r\n    lastUpdateFromServer: action.date\r\n  })\r\n}\r\n\r\nconst fetchNotesFail = (state, action) => {\r\n  return updateObject(state, {\r\n    loading: false,\r\n        error: action.error\r\n  })\r\n}\r\n\r\nconst updateNotesStart = (state, action) => {\r\n  return updateObject(state, {\r\n    loading: true,\r\n    error: null,\r\n    lastUpdateFromClient: action.date,\r\n  })\r\n}\r\n\r\nconst updateNotesSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    loading: false,\r\n    error: null,\r\n    lastUpdateFromClient: action.date\r\n  })\r\n}\r\n\r\nconst updateNotesFail = (state, action) => {\r\n  return updateObject(state, {\r\n    loading: false,\r\n    error: action.error\r\n  })\r\n}\r\n\r\nconst clearNotesInTrash = (state, action) => {\r\n  return {\r\n    ...state,\r\n    notes: state.notes.filter(n => n.folder !== TRASH_ID)\r\n  }\r\n}\r\n\r\nconst syncNotesFromServer = (state, action) => {\r\n  return updateObject(state, {\r\n    lastUpdateFromServer: action.date,\r\n    notes: _.unionBy(action.updated, state.notes.filter(oldN => !action.deleted.find(delN => delN.id === oldN.id)), \"id\")\r\n  })\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SELECT_NOTE: return selectNote(state, action)\r\n    case actionTypes.ADD_NOTE: return addNote(state, action)\r\n    case actionTypes.MOVE_TO_TRASH_NOTE: return moveToTrashNote(state, action)\r\n    case actionTypes.INPUT_TEXT: return inputText(state, action)\r\n    case actionTypes.RENAME_NOTE: return renameNote(state, action)\r\n    case actionTypes.FETCH_NOTES_START: return fetchNotesStart(state, action)\r\n    case actionTypes.FETCH_NOTES_SUCCESS:return fetchNotesSuccess(state, action)\r\n    case actionTypes.FETCH_NOTES_FAIL: return fetchNotesFail(state, action)\r\n    case actionTypes.UPDATE_NOTES_START: return updateNotesStart(state, action)\r\n    case actionTypes.UPDATE_NOTES_SUCCESS: return updateNotesSuccess(state, action)\r\n    case actionTypes.UPDATE_NOTES_FAIL: return updateNotesFail(state, action)\r\n    case actionTypes.CLEAR_NOTES_IN_TRASH: return clearNotesInTrash(state, action)\r\n    case actionTypes.SYNC_NOTES_FROM_SERVER: return syncNotesFromServer(state, action)\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","import * as actionTypes from \"../actions/actionTypes\"\r\nimport {updateObject} from \"../../shared/utility\"\r\nimport { ALL_NOTES_ID } from \"../../shared/constants\"\r\n\r\nimport _ from \"lodash\"\r\n\r\nconst initialState = {\r\n  folders: [],\r\n  currentFolder: ALL_NOTES_ID,\r\n  loading: false,\r\n  error: null,\r\n  lastUpdateFromClient: null,\r\n  lastUpdateFromServer: null\r\n}\r\n\r\nconst selectFolder = (state, action) => {\r\n  return updateObject(state, {\r\n    currentFolder: action.id\r\n  })\r\n}\r\n\r\nconst addFolder = (state, action) => {\r\n  return updateObject(state, {\r\n    folders: state.folders.concat(action.folder)\r\n  })\r\n}\r\n\r\nconst removeFolder = (state, action) => {\r\n  return updateObject(state, {\r\n    folders: state.folders.filter(f => f.id !== action.id)\r\n  })\r\n}\r\n\r\nconst renameFolder = (state, action) => {\r\n  return updateObject(state, {\r\n    folders: state.folders.map(n => {\r\n      if (n.id === action.id) {\r\n        return {\r\n          ...n,\r\n          name: action.newName\r\n        }\r\n      }\r\n      return n\r\n    })\r\n  })\r\n}\r\n\r\nconst fetchFoldersStart = (state, action) => {\r\n  return updateObject(state, {\r\n    loading: true,\r\n    error: null\r\n  })\r\n}\r\n\r\nconst fetchFoldersSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    folders: action.folders,\r\n    loading: false,\r\n    error: null,\r\n    lastUpdateFromServer: action.date\r\n  })\r\n}\r\n\r\nconst fetchFoldersFail = (state, action) => {\r\n  return updateObject(state, {\r\n    loading: false,\r\n    error: action.error\r\n  })\r\n}\r\n\r\nconst updateFoldersStart = (state, action) => {\r\n  return updateObject(state, {\r\n    loading: true,\r\n    error: null\r\n  })\r\n}\r\n\r\nconst updateFoldersSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    loading: false,\r\n    error: null,\r\n    lastUpdateFromClient: action.date\r\n  })\r\n}\r\n\r\nconst updateFoldersFail = (state, action) => {\r\n  return updateObject(state, {\r\n    loading: false,\r\n    error: action.error\r\n  })\r\n}\r\n\r\nconst changeFolderIcon = (state, action) => {\r\n  return updateObject(state, {\r\n    folders: state.folders.map(f => {\r\n      if (f.id === action.id) {\r\n        return {\r\n          ...f,\r\n          icon: action.icon\r\n        }\r\n      } \r\n      return f\r\n    })\r\n  })\r\n}\r\n\r\nconst changeFolderColor = (state, action) => {\r\n  return updateObject(state, {\r\n    folders: state.folders.map(f => {\r\n      if (f.id === action.id) {\r\n        return {\r\n          ...f,\r\n          color: action.color\r\n        }\r\n      } \r\n      return f\r\n    })\r\n  })\r\n}\r\n\r\nconst syncFoldersFromServer = (state, action) => {\r\n  return updateObject(state, {\r\n    lastUpdateFromServer: action.date,\r\n    folders: _.unionBy(action.updated, state.folders.filter(oldF => !action.deleted.find(delF => delF.id === oldF.id)), \"id\")\r\n  })\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SELECT_FOLDER: return selectFolder(state, action)\r\n    case actionTypes.ADD_FOLDER: return addFolder(state, action)\r\n    case actionTypes.REMOVE_FOLDER: return removeFolder(state, action)\r\n    case actionTypes.RENAME_FOLDER: return renameFolder(state, action)\r\n    case actionTypes.FETCH_FOLDERS_START: return fetchFoldersStart(state, action)\r\n    case actionTypes.FETCH_FOLDERS_SUCCESS: return fetchFoldersSuccess(state, action)\r\n    case actionTypes.FETCH_FOLDERS_FAIL: return fetchFoldersFail(state, action)\r\n    case actionTypes.UPDATE_FOLDERS_START: return updateFoldersStart(state, action)\r\n    case actionTypes.UPDATE_FOLDERS_SUCCESS: return updateFoldersSuccess(state, action)\r\n    case actionTypes.UPDATE_FOLDERS_FAIL: return updateFoldersFail(state, action)\r\n    case actionTypes.CHANGE_FOLDER_ICON: return changeFolderIcon(state, action)\r\n    case actionTypes.CHANGE_FOLDER_COLOR: return changeFolderColor(state, action)\r\n    case actionTypes.SYNC_FOLDERS_FROM_SERVER: return syncFoldersFromServer(state, action)\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","import * as actionTypes from \"../actions/actionTypes\"\r\nimport { updateObject } from \"../../shared/utility\"\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  error: null,\r\n  isAuth: false\r\n}\r\n\r\nconst authStart = (state, action) => {\r\n  return updateObject(state, {\r\n    error: null,\r\n    loading: true\r\n  })\r\n}\r\n\r\nconst authSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    error: action.error,\r\n    loading: false,\r\n    isAuth: true\r\n  })\r\n}\r\n\r\n\r\n\r\nconst authFail = (state, action) => {\r\n  return updateObject(state, {\r\n    error: action.error,\r\n    loading: false,\r\n  })\r\n}\r\n\r\nconst authLogout = (state, action) => {\r\n  return updateObject(state, {\r\n    error: null,\r\n    loading: false,\r\n    isAuth: false\r\n  })\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.AUTH_START: return authStart(state, action)\r\n    case actionTypes.AUTH_SUCCESS: return authSuccess(state, action)\r\n    case actionTypes.AUTH_FAIL: return authFail(state, action)\r\n    case actionTypes.AUTH_LOGOUT: return authLogout(state, action)\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport {createStore, combineReducers, applyMiddleware, compose} from \"redux\"\r\nimport {Provider} from \"react-redux\"\r\nimport thunk from \"redux-thunk\"\r\n\r\nimport notesReducer from \"./store/reducers/notes\"\r\nimport foldersReducer from \"./store/reducers/folders\"\r\nimport {BrowserRouter} from \"react-router-dom\"\r\nimport authReducer from \"./store/reducers/auth\"\r\n\r\n//====================================\r\nimport 'react-quill/dist/quill.snow.css';\r\n//====================================\r\n\r\nconst reducers = combineReducers({\r\n    notes: notesReducer,\r\n    folders: foldersReducer,\r\n    auth: authReducer\r\n  }\r\n)\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)))\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2nBj8\",\"InputElement\":\"Input_InputElement__10NDC\",\"Invalid\":\"Input_Invalid__3QHhq\",\"Error\":\"Input_Error__3bIX4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Tinote\":\"Tinote_Tinote__zR4LF\",\"Wrapper\":\"Tinote_Wrapper__2uM3T\",\"ShowEditor\":\"Tinote_ShowEditor__1UYHh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Profile\":\"Profile_Profile__27aSU\",\"Img\":\"Profile_Img__1uK1f\",\"ProfileName\":\"Profile_ProfileName__1r2QR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__-usOs\",\"Search\":\"Toolbar_Search__N9e9d\",\"Button\":\"Toolbar_Button__2GQQB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NoteEditor\":\"NoteEditor_NoteEditor__32Jd1\",\"Quill\":\"NoteEditor_Quill__2sfGQ\",\"ShowEditor\":\"NoteEditor_ShowEditor__20fAX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__2J4x8\",\"Open\":\"SideDrawer_Open__2kDGZ\",\"Close\":\"SideDrawer_Close__3IzkX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ToolbarButton\":\"ToolbarButton_ToolbarButton__1h2sg\",\"Active\":\"ToolbarButton_Active__3gHIp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NoteEditingToolbar\":\"NoteEditingToolbar_NoteEditingToolbar__1mAYl\",\"ArrowBack\":\"NoteEditingToolbar_ArrowBack__hEszf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1bqV7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__ZsR1l\",\"Buttons\":\"Auth_Buttons__2mV6p\"};"],"sourceRoot":""}