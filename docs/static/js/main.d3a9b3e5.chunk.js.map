{"version":3,"sources":["components/Menu/Menu.module.css","assets/images/profile-img.png","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/NoteItems/NoteItems.module.css","components/FolderItems/FolderItems.module.css","containers/Tinote/Explorer/Explorer.module.css","components/UI/Spinner/Spinner.module.css","components/UI/ContextMenu/ContextMenu.module.css","components/NoteItems/NoteItem/NoteItem.module.css","components/FolderItems/FolderItem/FolderItem.module.css","components/UI/Input/Input.module.css","hoc/Layout/Layout.js","components/Menu/Profile/Profile.js","components/UI/ToolbarButton/ToolbarButton.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Menu/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","components/Menu/Menu.js","components/NoteItems/NoteItem/NoteItem.js","shared/utility.js","components/NoteItems/NoteItems.js","components/FolderItems/FolderItem/FolderItem.js","shared/constants.js","components/FolderItems/FolderItems.js","myFirebase.js","FirebaseDBClient.js","store/actions/notes.js","store/actions/actionTypes.js","myAuth.js","store/actions/auth.js","components/UI/ContextMenu/ContextMenu.js","containers/Tinote/Explorer/Explorer.js","store/actions/folders.js","components/NoteEditingToolbar/NoteEditingToolbar.js","containers/Tinote/NoteEditor/NoteEditor.js","containers/Tinote/Tinote.js","components/UI/Input/Input.js","components/UI/Button/Button.js","components/UI/Spinner/Spinner.js","containers/Auth/Auth.js","App.js","serviceWorker.js","store/reducers/notes.js","store/reducers/folders.js","store/reducers/auth.js","index.js","containers/Tinote/Tinote.module.css","components/Menu/Profile/Profile.module.css","components/Menu/Toolbar/Toolbar.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","containers/Tinote/NoteEditor/NoteEditor.module.css","components/UI/ToolbarButton/ToolbarButton.module.css","components/NoteEditingToolbar/NoteEditingToolbar.module.css","components/UI/Button/Button.module.css","containers/Auth/Auth.module.css"],"names":["module","exports","Layout","Fragment","style","height","this","props","children","Component","toolbar","className","classes","Profile","Img","src","profileImg","alt","ProfileName","profileName","toolbarButton","classNames","ToolbarButton","active","push","Active","onClick","clicked","btnType","drawerToggle","DrawerToggle","Toolbar","burgerClicked","Search","type","placeholder","Button","buttonClicked","backdrop","open","Backdrop","sideDrawer","SideDrawer","Open","Close","close","join","Menu","React","useState","isSideDrawerOpen","setSideDrawerOpen","logout","toolbarBtnType","toolbarButtonClicked","noteItem","NoteItem","onContextMenu","leftClicked","onClickCapture","options","contentEditable","rename","Title","title","Content","content","Date","date","updateObject","state","newObject","debounce","fn","time","timeout","args","later","clearTimeout","apply","setTimeout","getDifferenceBetweenArrays","prevArr","newArr","isDiffer","updated","deleted","filter","prevObj","some","newObj","id","includes","length","stripHtml","html","tmp","document","createElement","innerHTML","textContent","innerText","NoteItems","jsxNotes","notes","map","note","event","showContext","current","key","select","slice","moment","fromNow","folderItem","FolderItem","color","Icon","icon","Name","name","initialFolder","initialNote","folderOptions","action","isTable","buttons","backgroundColor","noteOptions","trashOptions","folderItems","jsxFolders","folders","folder","FolderItems","addFolder","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","fireDB","db","firestore","collectionName","collection","doc","notesDiff","foldersDiff","Promise","resolve","reject","batch","forEach","docRef","delete","set","commit","then","response","catch","error","get","querySnapshot","docs","data","selectNote","auth","authFail","contextMenu","jsxOptions","option","index","ContextMenuItem","items","optionHandler","jsxItems","item","ind","TableMenu","createSubMenu","ContextMenu","show","addEventListener","closed","Hide","top","y","left","x","ContextMenuItems","Explorer","renameFolderId","renameNoteId","elemType","updateFolders","updateNotes","contextMenuShowHandler","preventDefault","pageX","pageY","setState","contextMenuHideHandler","contextMenuOptionHandler","removeFolder","moveNoteToTrash","onClearNotesInTrash","Error","Object","keys","onChangeFolderColor","onChangeFolderIcon","renameFolderHandler","renameFolder","currentTarget","renameNoteHandler","selectNoteHandler","fetchFolders","fetchNotes","prevProps","onRename","currentFolder","selectFolder","currentNote","n","connect","dispatch","actions","FireDB","getId","newName","fetchFoldersFail","save","updateFoldersSuccess","updateFoldersFail","renameNote","fetchNotesFail","updateNotesSuccess","updateNotesFail","NoteEditingToolbar","button","toolbarBtnClicked","activeAction","inactiveAction","ArrowBack","arrowClicked","quillModules","header","list","indent","quillFormats","NoteEditor","text","handleChange","value","currentNoteItem","inputText","arrowBackHancler","quill","modules","formats","readOnly","Quill","onChange","noteEditorClasses","isShow","ShowEditor","find","Tinote","toolbarNoteHandler","isTrashOpen","onClearTrash","onAddNote","now","authRedirect","isAuth","to","isEditorOpen","wrapperStyles","Wrapper","onLogout","signOut","res","console","log","input","inputClasses","InputElement","invalid","Invalid","Input","elemConfig","onInput","btnTupe","disabled","spinner","loader","Auth","isEmailInvalid","isPasswordInvalid","isSignin","emailValue","passwordValue","emailInputHandler","validator","isEmail","target","passwordInputHandler","isLength","min","max","sumbitHandler","e","onSignin","onSignup","switchModeHandler","prevState","onCheckAuthState","form","Spinner","loading","onSubmit","Buttons","email","password","signInWithEmailAndPassword","createUserWithEmailAndPassword","onAuthStateChanged","user","App","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","initialState","addNote","concat","moveToTrashNote","fetchNotesStart","fetchNotesSuccess","updateNotesStart","clearNotesInTrash","reducer","f","fetchFoldersStart","fetchFoldersSuccess","updateFoldersStart","changeFolderIcon","changeFolderColor","authStart","authSuccess","authLogout","reducers","combineReducers","notesReducer","foldersReducer","authReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById","URL","process","href","origin","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d3a9b3e5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menu\":\"Menu_Menu__2U4Vu\"};","module.exports = __webpack_public_path__ + \"static/media/profile-img.01327c90.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__3iEQ1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__NhvU6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NoteItems\":\"NoteItems_NoteItems__28LUH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FolderItems\":\"FolderItems_FolderItems__2jToC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Explorer\":\"Explorer_Explorer__3y22j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__2KmVm\",\"load1\":\"Spinner_load1__30IQu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContextMenu\":\"ContextMenu_ContextMenu__1m4Th\",\"Hide\":\"ContextMenu_Hide__mJh99\",\"ContextMenuItems\":\"ContextMenu_ContextMenuItems__2cM-Z\",\"TableMenu\":\"ContextMenu_TableMenu__3rUfS\",\"ContextMenuItem\":\"ContextMenu_ContextMenuItem__BaZiy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NoteItem\":\"NoteItem_NoteItem__1I4-F\",\"Active\":\"NoteItem_Active__We-oo\",\"Title\":\"NoteItem_Title__2SM69\",\"Content\":\"NoteItem_Content__259o2\",\"Date\":\"NoteItem_Date__3WwS8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FolderItem\":\"FolderItem_FolderItem__5rgJ9\",\"Active\":\"FolderItem_Active__18g6D\",\"Icon\":\"FolderItem_Icon__1gRlN\",\"Name\":\"FolderItem_Name__2T2tw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2nBj8\",\"InputElement\":\"Input_InputElement__10NDC\",\"Invalid\":\"Input_Invalid__3QHhq\",\"Error\":\"Input_Error__3bIX4\"};","import React, { Component } from \"react\"\r\n\r\nclass Layout extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <main style={{ height: \"100%\" }}>{this.props.children}</main>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Layout\r\n","import React from \"react\"\r\n\r\nimport classes from \"./Profile.module.css\"\r\nimport profileImg from \"../../../assets/images/profile-img.png\"\r\n\r\nconst toolbar = props => {\r\n  return (\r\n    <div className={classes.Profile}>\r\n      <img className={classes.Img} src={profileImg} alt=\"Profile\"></img>\r\n      <p className={classes.ProfileName}>{props.profileName}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default toolbar\r\n","import React from \"react\"\r\n\r\nimport classes from \"./ToolbarButton.module.css\"\r\n\r\nconst toolbarButton = props => {\r\n  const classNames = [classes.ToolbarButton]\r\n\r\n  if (props.active) {\r\n    classNames.push(classes.Active)\r\n  }\r\n\r\n  return (\r\n    <div onClick={props.clicked} className={classNames}>\r\n      <span className={\"material-icons\"}>{props.btnType}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default toolbarButton\r\n","import React from \"react\"\r\n\r\nimport classes from \"./DrawerToggle.module.css\"\r\n\r\nconst drawerToggle = props => (\r\n  <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n  </div>\r\n)\r\n\r\nexport default drawerToggle\r\n","import React from \"react\"\r\n\r\nimport ToolbarButton from \"../../UI/ToolbarButton/ToolbarButton\"\r\nimport DrawerToggle from \"../../Navigation/SideDrawer/DrawerToggle/DrawerToggle\"\r\nimport classes from \"./Toolbar.module.css\"\r\n\r\nconst toolbar = props => {\r\n  return (\r\n    <div className={classes.Toolbar}>\r\n      <DrawerToggle clicked={props.burgerClicked} />\r\n\r\n      <input className={classes.Search} type=\"search\" placeholder=\"Search\" />\r\n\r\n      <div className={classes.Button}>\r\n        <ToolbarButton\r\n          clicked={props.buttonClicked}\r\n          active={false}\r\n          btnType={props.btnType}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default toolbar\r\n","import React from \"react\"\r\n\r\nimport classes from \"./Backdrop.module.css\"\r\n\r\nconst backdrop = props => {\r\n  let backdrop = null\r\n  if (props.open) {\r\n    backdrop = <div className={classes.Backdrop} onClick={props.clicked}></div>\r\n  }\r\n\r\n  return backdrop\r\n}\r\n\r\nexport default backdrop\r\n","import React from \"react\"\r\nimport classes from \"./SideDrawer.module.css\"\r\nimport Backdrop from \"../../UI/Backdrop/Backdrop\"\r\n\r\nconst sideDrawer = props => {\r\n  const classNames = [classes.SideDrawer]\r\n  if (props.open) {\r\n    classNames.push(classes.Open)\r\n  } else {\r\n    classNames.push(classes.Close)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Backdrop open={props.open} clicked={props.close} />\r\n      <div className={classNames.join(\" \")}>{props.children}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default sideDrawer\r\n","import React from \"react\"\r\n\r\nimport classes from \"./Menu.module.css\"\r\nimport Profile from \"./Profile/Profile\"\r\nimport Toolbar from \"./Toolbar/Toolbar\"\r\nimport SideDrawer from \"../Navigation/SideDrawer/SideDrawer\"\r\n\r\nconst Menu = props => {\r\n  const [isSideDrawerOpen, setSideDrawerOpen] = React.useState(false)\r\n\r\n  return (\r\n    <div className={classes.Menu}>\r\n      <SideDrawer\r\n        open={isSideDrawerOpen}\r\n        close={() => setSideDrawerOpen(false)}\r\n      >\r\n        <p onClick={props.logout}>Logout</p>\r\n      </SideDrawer>\r\n      <Profile profileName={\"Name\"} />\r\n      <Toolbar\r\n        burgerClicked={() => setSideDrawerOpen(!isSideDrawerOpen)}\r\n        btnType={props.toolbarBtnType}\r\n        buttonClicked={props.toolbarButtonClicked}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Menu\r\n","import React from \"react\"\r\n\r\nimport classes from \"./NoteItem.module.css\"\r\n\r\nconst noteItem = props => {\r\n  const classNames = [classes.NoteItem]\r\n\r\n  if (props.active) {\r\n    classNames.push(classes.Active)\r\n  }\r\n\r\n  return (\r\n    <li\r\n      onContextMenu={props.leftClicked}\r\n      onClickCapture={props.clicked}\r\n      className={classNames.join(\" \")}\r\n    >\r\n      <p\r\n        {...props.options}\r\n        contentEditable={props.rename}\r\n        className={classes.Title}\r\n      >\r\n        {props.title}\r\n      </p>\r\n      <p className={classes.Content}>{props.content}</p>\r\n      <p className={classes.Date}>{props.date}</p>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default noteItem\r\n","export const updateObject = (state, newObject) => {\r\n  return {\r\n    ...state,\r\n    ...newObject,\r\n  }\r\n}\r\n\r\nexport function debounce(fn, time) {\r\n  let timeout\r\n  return (...args) => {\r\n    const later = () => {\r\n      clearTimeout(timeout)\r\n\r\n      fn.apply(this, args)\r\n    }\r\n    clearTimeout(timeout)\r\n    timeout = setTimeout(later, time)\r\n  }\r\n}\r\n\r\nexport function getDifferenceBetweenArrays(prevArr, newArr) {\r\n  if (prevArr === newArr) {\r\n    return {\r\n      isDiffer: false,\r\n      updated: [],\r\n      deleted: [],\r\n    }\r\n  }\r\n\r\n  const deleted = prevArr.filter(prevObj => {\r\n    return !newArr.some(function (newObj) {\r\n      return prevObj.id === newObj.id\r\n    })\r\n  })\r\n\r\n  const updated = newArr.filter(newObj => !prevArr.includes(newObj))\r\n\r\n  const response = {\r\n    isDiffer: updated.length || deleted.length,\r\n    updated: updated,\r\n    deleted: deleted,\r\n  }\r\n\r\n  return response\r\n}\r\n\r\nexport function stripHtml(html) {\r\n  var tmp = document.createElement(\"DIV\")\r\n  tmp.innerHTML = html\r\n  return tmp.textContent || tmp.innerText || \"\"\r\n}\r\n","import React from \"react\"\r\nimport NoteItem from \"./NoteItem/NoteItem\"\r\nimport classes from \"./NoteItems.module.css\"\r\nimport { stripHtml } from \"../../shared/utility\"\r\nimport moment from \"moment\"\r\n\r\nconst NoteItems = props => {\r\n  // const docRefRename = React.createRef()\r\n\r\n  // useEffect(() => {\r\n  //   if(docRefRename && props.renameNoteId) {\r\n  //     console.log(123)\r\n  //     docRefRename.current.focus()\r\n  //   }\r\n  // })\r\n\r\n  let options = {}\r\n  const jsxNotes = props.notes.map(note => {\r\n    options = {}\r\n    // console.log(props.renameNoteId)\r\n    // if (note.id === props.renameNoteId) {\r\n    //   options = {\r\n    //     onKeyPress: props.onRename,\r\n    //     onBlur: props.onRename,\r\n    //     ref: docRefRename\r\n    //   }\r\n    // }\r\n    return (\r\n      <NoteItem\r\n        leftClicked={event => props.showContext(event, \"note\", note.id)}\r\n        active={note.id === props.current}\r\n        options={options}\r\n        key={note.id}\r\n        clicked={() => props.select(note.id)}\r\n        title={note.title}\r\n        content={stripHtml(note.content.slice(0, 50))}\r\n        date={moment(note.date).fromNow()}\r\n      />\r\n    )\r\n  })\r\n\r\n  return <ul className={classes.NoteItems}>{jsxNotes}</ul>\r\n}\r\n\r\nexport default NoteItems\r\n","import React from \"react\"\r\n\r\nimport classes from \"./FolderItem.module.css\"\r\n\r\nconst folderItem = props => {\r\n  const classNames = [classes.FolderItem]\r\n  if (props.active) {\r\n    classNames.push(classes.Active)\r\n  }\r\n  return (\r\n    <li\r\n      // onKeyPress={props.onRename}\r\n      // onBlur={props.onRename}\r\n      onContextMenu={props.leftClicked}\r\n      onClickCapture={props.clicked}\r\n      className={classNames.join(\" \")}\r\n      style={{ color: props.color }}\r\n    >\r\n      <span className={\"material-icons \" + classes.Icon}>{props.icon}</span>\r\n      <p className={classes.Name}>{props.name}</p>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default folderItem\r\n","export const initialFolder = {\r\n  name: \"New Folder\",\r\n  color: \"#ccc\",\r\n  icon: \"folder\",\r\n}\r\n\r\nexport const initialNote = {\r\n  content: \"\",\r\n  date: \"Not provided\",\r\n  title: \"New Note\",\r\n}\r\n\r\nexport const TRASH_ID = \"TRASH\"\r\nexport const UNSORTED_ID = \"UNSORTED\"\r\nexport const ALL_NOTES_ID = \"ALL_NOTES\"\r\n\r\nexport const folderOptions = [\r\n  {\r\n    name: \"Rename\",\r\n    action: \"Rename\",\r\n  },\r\n  {\r\n    name: \"Delete\",\r\n    action: \"Delete\",\r\n  },\r\n  {\r\n    isTable: true,\r\n    name: \"Colors\",\r\n    buttons: [\r\n      {\r\n        backgroundColor: \"#1abc9c\",\r\n        action: { backgroundColor: \"#1abc9c\" },\r\n      },\r\n      {\r\n        backgroundColor: \"#2ecc71\",\r\n        action: { backgroundColor: \"#2ecc71\" },\r\n      },\r\n      {\r\n        backgroundColor: \"#3498db\",\r\n        action: { backgroundColor: \"#3498db\" },\r\n      },\r\n      {\r\n        backgroundColor: \"#9b59b6\",\r\n        action: { backgroundColor: \"#9b59b6\" },\r\n      },\r\n      {\r\n        backgroundColor: \"#34495e\",\r\n        action: { backgroundColor: \"#34495e\" },\r\n      },\r\n      {\r\n        backgroundColor: \"#16a085\",\r\n        action: { backgroundColor: \"#16a085\" },\r\n      },\r\n      {\r\n        backgroundColor: \"#27ae60\",\r\n        action: { backgroundColor: \"#27ae60\" },\r\n      },\r\n      {\r\n        backgroundColor: \"#2980b9\",\r\n        action: { backgroundColor: \"#2980b9\" },\r\n      },\r\n      {\r\n        backgroundColor: \"#8e44ad\",\r\n        action: { backgroundColor: \"#8e44ad\" },\r\n      },\r\n      {\r\n        backgroundColor: \"#2c3e50\",\r\n        action: { backgroundColor: \"#2c3e50\" },\r\n      },\r\n      {\r\n        backgroundColor: \"#f1c40f\",\r\n        action: { backgroundColor: \"#f1c40f\" },\r\n      },\r\n      {\r\n        backgroundColor: \"#e67e22\",\r\n        action: { backgroundColor: \"#e67e22\" },\r\n      },\r\n      {\r\n        backgroundColor: \"#e74c3c\",\r\n        action: { backgroundColor: \"#e74c3c\" },\r\n      },\r\n      {\r\n        backgroundColor: \"#ecf0f1\",\r\n        action: { backgroundColor: \"#ecf0f1\" },\r\n      },\r\n      {\r\n        backgroundColor: \"#95a5a6\",\r\n        action: { backgroundColor: \"#95a5a6\" },\r\n      },\r\n      {\r\n        backgroundColor: \"#f39c12\",\r\n        action: { backgroundColor: \"#f39c12\" },\r\n      },\r\n      {\r\n        backgroundColor: \"#d35400\",\r\n        action: { backgroundColor: \"#d35400\" },\r\n      },\r\n      {\r\n        backgroundColor: \"#c0392b\",\r\n        action: { backgroundColor: \"#c0392b\" },\r\n      },\r\n      {\r\n        backgroundColor: \"#bdc3c7\",\r\n        action: { backgroundColor: \"#bdc3c7\" },\r\n      },\r\n      {\r\n        backgroundColor: \"#7f8c8d\",\r\n        action: { backgroundColor: \"#7f8c8d\" },\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    isTable: true,\r\n    name: \"Icon\",\r\n    buttons: [\r\n      {\r\n        icon: \"outlet\",\r\n        action: { icon: \"outlet\" },\r\n      },\r\n      {\r\n        icon: \"accessibility\",\r\n        action: { icon: \"accessibility\" },\r\n      },\r\n      {\r\n        icon: \"accessible\",\r\n        action: { icon: \"accessible\" },\r\n      },\r\n      {\r\n        icon: \"alarm_on\",\r\n        action: { icon: \"alarm_on\" },\r\n      },\r\n      {\r\n        icon: \"assignment\",\r\n        action: { icon: \"assignment\" },\r\n      },\r\n      {\r\n        icon: \"face\",\r\n        action: { icon: \"face\" },\r\n      },\r\n      {\r\n        icon: \"get_app\",\r\n        action: { icon: \"get_app\" },\r\n      },\r\n      {\r\n        icon: \"schedule\",\r\n        action: { icon: \"schedule\" },\r\n      },\r\n      {\r\n        icon: \"shopping_cart\",\r\n        action: { icon: \"shopping_cart\" },\r\n      },\r\n      {\r\n        icon: \"thumb_up\",\r\n        action: { icon: \"thumb_up\" },\r\n      },\r\n      {\r\n        icon: \"thumb_down\",\r\n        action: { icon: \"thumb_down\" },\r\n      },\r\n      {\r\n        icon: \"rss_feed\",\r\n        action: { icon: \"thumb_down\" },\r\n      },\r\n      {\r\n        icon: \"visibility\",\r\n        action: { icon: \"visibility\" },\r\n      },\r\n      {\r\n        icon: \"error\",\r\n        action: { icon: \"error\" },\r\n      },\r\n      {\r\n        icon: \"call\",\r\n        action: { icon: \"call\" },\r\n      },\r\n      {\r\n        icon: \"clear\",\r\n        action: { icon: \"clear\" },\r\n      },\r\n      {\r\n        icon: \"mail\",\r\n        action: { icon: \"mail\" },\r\n      },\r\n      {\r\n        icon: \"weekend\",\r\n        action: { icon: \"weekend\" },\r\n      },\r\n      {\r\n        icon: \"attach_money\",\r\n        action: { icon: \"attach_money\" },\r\n      },\r\n      {\r\n        icon: \"tag_faces\",\r\n        action: { icon: \"tag_faces\" },\r\n      },\r\n    ],\r\n  },\r\n]\r\n\r\nexport const noteOptions = [\r\n  {\r\n    name: \"Rename\",\r\n    action: \"Rename\",\r\n  },\r\n  {\r\n    name: \"Delete\",\r\n    action: \"Delete\",\r\n  },\r\n]\r\n\r\nexport const trashOptions = [\r\n  {\r\n    name: \"Clear\",\r\n    action: \"Clear\",\r\n  },\r\n]\r\n","import React from \"react\"\r\n\r\nimport classes from \"./FolderItems.module.css\"\r\nimport FolderItem from \"./FolderItem/FolderItem\"\r\nimport { TRASH_ID, UNSORTED_ID, ALL_NOTES_ID } from \"../../shared/constants\"\r\n\r\nconst folderItems = props => {\r\n  const jsxFolders = props.folders.map(folder => {\r\n    return (\r\n      <FolderItem\r\n        leftClicked={event => props.showContext(event, \"folder\", folder.id)}\r\n        active={folder.id === props.current}\r\n        // onRename={props.onRename}\r\n        // rename={folder.id === props.renameFolderId}\r\n        clicked={() => props.select(folder.id)}\r\n        key={folder.id}\r\n        icon={folder.icon}\r\n        color={folder.color}\r\n        name={folder.name}\r\n      ></FolderItem>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <ul className={classes.FolderItems}>\r\n      <FolderItem\r\n        active={UNSORTED_ID === props.current}\r\n        clicked={() => props.select(UNSORTED_ID)}\r\n        key={UNSORTED_ID}\r\n        icon={\"topic\"}\r\n        color={\"#ccc\"}\r\n        name={\"Unsorted\"}\r\n      ></FolderItem>\r\n      <FolderItem\r\n        active={ALL_NOTES_ID === props.current}\r\n        clicked={() => props.select(ALL_NOTES_ID)}\r\n        key={ALL_NOTES_ID}\r\n        icon={\"rule_folder\"}\r\n        color={\"#ccc\"}\r\n        name={\"All\"}\r\n      ></FolderItem>\r\n\r\n      {jsxFolders}\r\n\r\n      <FolderItem\r\n        active={false}\r\n        clicked={() => props.addFolder({})}\r\n        key={\"__ADD_FOLDER\"}\r\n        icon={\"create_new_folder\"}\r\n        color={\"#ccc\"}\r\n        name={\"Add folder\"}\r\n      ></FolderItem>\r\n\r\n      <FolderItem\r\n        leftClicked={event => props.showContext(event, \"folder\", TRASH_ID)}\r\n        active={TRASH_ID === props.current}\r\n        clicked={() => props.select(TRASH_ID)}\r\n        key={TRASH_ID}\r\n        icon={\"delete\"}\r\n        color={\"#ccc\"}\r\n        name={\"Trash\"}\r\n      ></FolderItem>\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default folderItems\r\n","import * as firebase from \"firebase/app\"\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\"\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDvc6lij9iMoZ8tDBfLghISPKJtqx_L54U\",\r\n  authDomain: \"tinote-5fd77.firebaseapp.com\",\r\n  databaseURL: \"https://tinote-5fd77.firebaseio.com\",\r\n  projectId: \"tinote-5fd77\",\r\n  storageBucket: \"tinote-5fd77.appspot.com\",\r\n  messagingSenderId: \"207256672485\",\r\n  appId: \"1:207256672485:web:94c7f77f99e19706da9c0c\"\r\n}\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase\r\n","import {getDifferenceBetweenArrays} from \"./shared/utility\";\r\nimport firebase from \"./myFirebase\"\r\n\r\nexport class FirebaseDBClient {\r\n  constructor() {\r\n    this.notes = []\r\n    this.folders = []\r\n    this.db = firebase.firestore()\r\n  }\r\n\r\n  init() {\r\n  }\r\n\r\n  getId(collectionName) {\r\n    return this.db.collection(collectionName).doc().id\r\n  }\r\n\r\n  save({notes, folders}) {\r\n    let notesDiff\r\n    let foldersDiff\r\n    if (!notes) {\r\n      notesDiff = getDifferenceBetweenArrays(this.notes, this.notes)\r\n    } else {\r\n      notesDiff = getDifferenceBetweenArrays(this.notes, notes)\r\n    }\r\n    if (!folders) {\r\n      foldersDiff = getDifferenceBetweenArrays(this.folders, this.folders)\r\n    } else {\r\n      foldersDiff = getDifferenceBetweenArrays(this.folders, folders)\r\n    }\r\n    if (!notesDiff.isDiffer && !foldersDiff.isDiffer) {\r\n      // console.log(\"FIREthis.db ISNT DIFFER\")\r\n      return  new Promise(resolve => resolve(true))\r\n    }\r\n\r\n    return new Promise((resolve, reject)=> {\r\n      const batch = this.db.batch()\r\n\r\n      foldersDiff.deleted.forEach(folder => {\r\n        const docRef = this.db.collection(\"folders\").doc(folder.id);\r\n        batch.delete(docRef);\r\n      })\r\n\r\n      notesDiff.deleted.forEach(note => {\r\n        const docRef = this.db.collection(\"notes\").doc(note.id);\r\n        batch.delete(docRef);\r\n      })\r\n\r\n      foldersDiff.updated.forEach(folder => {\r\n        const docRef = this.db.collection(\"folders\").doc(folder.id)\r\n        batch.set(docRef, {\r\n          name: folder.name,\r\n          color: folder.color,\r\n          icon: folder.icon\r\n        })\r\n      })\r\n      notesDiff.updated.forEach(note => {\r\n        const docRef = this.db.collection(\"notes\").doc(note.id)\r\n        batch.set(docRef, {\r\n          title: note.title,\r\n          content: note.content,\r\n          folder: note.folder,\r\n          date: note.date,\r\n        })\r\n      })\r\n\r\n      batch.commit().then(response => {\r\n        if (notes) {\r\n          this.notes = notes\r\n        }\r\n        if (folders) {\r\n          this.folders = folders\r\n        }\r\n       \r\n        resolve(response)\r\n      })\r\n      .catch(error => {\r\n        // console.log(error)\r\n        reject(error)\r\n      })\r\n    })\r\n  }\r\n\r\n  get(collection) {\r\n    return new Promise((resolve, reject) => {\r\n      this.db.collection(collection).get().then(querySnapshot => {\r\n        const docs = []\r\n        querySnapshot.forEach(doc => {\r\n          docs.push({...doc.data(), id: doc.id})\r\n        });\r\n        if (collection === \"folders\") {\r\n          this.folders = docs\r\n        }\r\n        if (collection === \"notes\") {\r\n          this.notes = docs\r\n        }\r\n        resolve(docs)\r\n      })\r\n      .catch(error => {\r\n        reject(error)\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\nconst fireDB = new FirebaseDBClient()\r\n\r\nexport default fireDB\r\n","import * as actionTypes from \"./actionTypes\"\r\nimport FireDB from \"../../FirebaseDBClient\"\r\n\r\nexport const addNote = note => {\r\n  return {\r\n    type: actionTypes.ADD_NOTE,\r\n    note: {\r\n      ...note,\r\n      id: FireDB.getId(\"notes\"),\r\n    },\r\n  }\r\n}\r\n\r\nexport const selectNote = id => {\r\n  return {\r\n    type: actionTypes.SELECT_NOTE,\r\n    id,\r\n  }\r\n}\r\n\r\nexport const renameNote = (id, newName) => {\r\n  return {\r\n    type: actionTypes.RENAME_NOTE,\r\n    id,\r\n    newName,\r\n  }\r\n}\r\n\r\nexport const moveNoteToTrash = id => {\r\n  return {\r\n    type: actionTypes.MOVE_TO_TRASH_NOTE,\r\n    id,\r\n  }\r\n}\r\n\r\nexport const inputText = (id, text) => {\r\n  return {\r\n    type: actionTypes.INPUT_TEXT,\r\n    id,\r\n    text,\r\n  }\r\n}\r\n\r\nexport const fetchNotesStart = () => {\r\n  return {\r\n    type: actionTypes.FETCH_NOTES_START,\r\n  }\r\n}\r\n\r\nexport const fetchNotesSuccess = notes => {\r\n  return {\r\n    type: actionTypes.FETCH_NOTES_SUCCESS,\r\n    notes,\r\n  }\r\n}\r\n\r\nexport const fetchNotesFail = error => {\r\n  return {\r\n    type: actionTypes.FETCH_NOTES_FAIL,\r\n    error,\r\n  }\r\n}\r\n\r\nexport const fetchNotes = () => {\r\n  return dispatch => {\r\n    dispatch(fetchNotesStart())\r\n    FireDB.get(\"notes\")\r\n      .then(response => {\r\n        dispatch(fetchNotesSuccess(response))\r\n      })\r\n      .catch(error => {\r\n        dispatch(fetchNotesFail(error))\r\n      })\r\n  }\r\n}\r\n\r\nexport const clearNotesInTrash = () => {\r\n  return {\r\n    type: actionTypes.CLEAR_NOTES_IN_TRASH,\r\n  }\r\n}\r\n\r\nexport const updateNotesStart = () => {\r\n  return {\r\n    type: actionTypes.UPDATE_NOTES_START,\r\n  }\r\n}\r\n\r\nexport const updateNotesSuccess = notes => {\r\n  return {\r\n    type: actionTypes.UPDATE_NOTES_SUCCESS,\r\n    notes,\r\n  }\r\n}\r\n\r\nexport const updateNotesFail = error => {\r\n  return {\r\n    type: actionTypes.UPDATE_NOTES_FAIL,\r\n    error,\r\n  }\r\n}\r\n\r\nexport const updateNotes = notes => {\r\n  return dispatch => {\r\n    dispatch(updateNotesStart())\r\n    FireDB.save({ notes: notes })\r\n      .then(response => {\r\n        dispatch(updateNotesSuccess(response))\r\n      })\r\n      .catch(error => {\r\n        dispatch(updateNotesFail(error))\r\n      })\r\n  }\r\n}\r\n","export const ADD_FOLDER = \"ADD_FOLDER\"\r\nexport const REMOVE_FOLDER = \"REMOVE_FOLDER\"\r\nexport const RENAME_FOLDER = \"RENAME_FOLDER\"\r\nexport const SELECT_FOLDER = \"SELECT_FOLDER\"\r\nexport const CHANGE_FOLDER_COLOR = \"CHANGE_FOLDER_COLOR\"\r\nexport const CHANGE_FOLDER_ICON = \"CHANGE_FOLDER_ICON\"\r\n\r\nexport const FETCH_FOLDERS_START = \"FETCH_FOLDER_START\"\r\nexport const FETCH_FOLDERS_SUCCESS = \"FETCH_FOLDER_SUCCESS\"\r\nexport const FETCH_FOLDERS_FAIL = \"FETCH_FOLDER_FAIL\"\r\n\r\nexport const UPDATE_FOLDERS_START = \"UPDATE_FOLDER_START\"\r\nexport const UPDATE_FOLDERS_SUCCESS = \"UPDATE_FOLDER_SUCCESS\"\r\nexport const UPDATE_FOLDERS_FAIL = \"UPDATE_FOLDER_FAIL\"\r\n\r\nexport const ADD_NOTE = \"ADD_NOTE\"\r\nexport const MOVE_TO_TRASH_NOTE = \"MOVE_TO_TRASH_NOTE\"\r\nexport const RENAME_NOTE = \"RENAME_NOTE\"\r\nexport const SELECT_NOTE = \"SELECT_NOTE\"\r\nexport const INPUT_TEXT = \"INPUT_TEXT\"\r\nexport const CLEAR_NOTES_IN_TRASH = \"CLEAR_NOTES_IN_TRASH\"\r\n\r\nexport const FETCH_NOTES_START = \"FETCH_NOTE_START\"\r\nexport const FETCH_NOTES_SUCCESS = \"FETCH_NOTE_SUCCESS\"\r\nexport const FETCH_NOTES_FAIL = \"FETCH_NOTE_FAIL\"\r\n\r\nexport const UPDATE_NOTES_START = \"UPDATE_NOTE_START\"\r\nexport const UPDATE_NOTES_SUCCESS = \"UPDATE_NOTE_SUCCESS\"\r\nexport const UPDATE_NOTES_FAIL = \"UPDATE_NOTE_FAIL\"\r\n\r\nexport const AUTH_START = \"AUTH_START\"\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\"\r\nexport const AUTH_FAIL = \"AUTH_FAIL\"\r\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\"\r\n","import firebase from \"./myFirebase\"\r\n\r\nexport default firebase.auth()\r\n","import * as actionTypes from \"./actionTypes\"\r\nimport auth from \"../../myAuth\"\r\n\r\nexport const authSuccess = () => {\r\n  return {\r\n    type: actionTypes.AUTH_SUCCESS,\r\n  }\r\n}\r\n\r\nexport const authStart = () => {\r\n  return {\r\n    type: actionTypes.AUTH_START,\r\n  }\r\n}\r\n\r\nexport const authLogout = () => {\r\n  return {\r\n    type: actionTypes.AUTH_LOGOUT,\r\n  }\r\n}\r\n\r\nexport const authFail = error => {\r\n  return {\r\n    type: actionTypes.AUTH_FAIL,\r\n    error,\r\n  }\r\n}\r\n\r\nexport const signIn = (email, password) => {\r\n  return dispatch => {\r\n    dispatch(authStart())\r\n    auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(response => {\r\n        dispatch(authSuccess())\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n        dispatch(authFail(error))\r\n      })\r\n  }\r\n}\r\n\r\nexport const signUp = (email, password) => {\r\n  return dispatch => {\r\n    dispatch(authStart())\r\n    auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then(response => {\r\n        dispatch(authSuccess())\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n        dispatch(authFail(error))\r\n      })\r\n  }\r\n}\r\n\r\nexport const checkAuthState = () => {\r\n  return dispatch => {\r\n    dispatch(authStart())\r\n    auth.onAuthStateChanged(function (user) {\r\n      if (user) {\r\n        dispatch(authSuccess())\r\n      } else {\r\n        dispatch(authLogout())\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const logout = () => {\r\n  return dispatch => {\r\n    dispatch(authStart())\r\n    auth\r\n      .signOut()\r\n      .then(res => {\r\n        dispatch(authLogout())\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n        dispatch(authFail(error))\r\n      })\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport classes from \"./ContextMenu.module.css\"\r\n\r\nconst createSubMenu = (items, optionHandler) => {\r\n  const jsxItems = items.map((item, ind) => {\r\n    return (\r\n      <li\r\n        onClick={() => optionHandler(item.action)}\r\n        key={ind}\r\n        style={{ backgroundColor: item.backgroundColor, color: item.color }}\r\n      >\r\n        {item.icon && <span className=\"material-icons\">{item.icon}</span>}\r\n      </li>\r\n    )\r\n  })\r\n\r\n  return <ul className={classes.TableMenu}>{jsxItems}</ul>\r\n}\r\n\r\nconst contextMenu = props => {\r\n  const jsxOptions = props.options.map((option, index) => {\r\n    if (option.isTable) {\r\n      return (\r\n        <li key={index} className={classes.ContextMenuItem}>\r\n          {option.name}\r\n          {createSubMenu(option.buttons, props.optionHandler)}\r\n        </li>\r\n      )\r\n    } else {\r\n      return (\r\n        <li\r\n          onClick={() => props.optionHandler(option.action)}\r\n          key={index}\r\n          className={classes.ContextMenuItem}\r\n        >\r\n          {option.name}\r\n        </li>\r\n      )\r\n    }\r\n  })\r\n\r\n  const classNames = [classes.ContextMenu]\r\n\r\n  if (!props.show) {\r\n    classNames.push(classes.Hide)\r\n  } else {\r\n    document.addEventListener(\"click\", () => {\r\n      props.closed()\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={classNames.join(\" \")}\r\n      style={{ top: props.y, left: props.x }}\r\n    >\r\n      <ul className={classes.ContextMenuItems}>{jsxOptions}</ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default contextMenu\r\n","import React, { Component } from \"react\"\r\n\r\nimport NoteItems from \"../../../components/NoteItems/NoteItems\"\r\nimport FolderItems from \"../../../components/FolderItems/FolderItems\"\r\nimport classes from \"./Explorer.module.css\"\r\nimport { connect } from \"react-redux\"\r\nimport * as actions from \"../../../store/actions/index\"\r\nimport ContextMenu from \"../../../components/UI/ContextMenu/ContextMenu\"\r\nimport { debounce } from \"../../../shared/utility\"\r\nimport {\r\n  initialFolder,\r\n  ALL_NOTES_ID,\r\n  TRASH_ID,\r\n  trashOptions,\r\n  folderOptions,\r\n  noteOptions,\r\n} from \"../../../shared/constants\"\r\n\r\nclass Explorer extends Component {\r\n  state = {\r\n    renameFolderId: null,\r\n    renameNoteId: null,\r\n    contextMenu: {\r\n      x: -100,\r\n      y: -100,\r\n      show: false,\r\n      elemType: null,\r\n      id: null,\r\n    },\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.fetchFolders()\r\n    this.props.fetchNotes()\r\n\r\n    this.updateFolders = debounce(this.updateFolders, 2000)\r\n    this.updateNotes = debounce(this.updateNotes, 5000)\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.folders !== this.props.folders && prevProps.folders !== []) {\r\n      this.updateFolders()\r\n    }\r\n    if (prevProps.notes !== this.props.notes && prevProps.notes !== []) {\r\n      this.updateNotes()\r\n    }\r\n  }\r\n\r\n  updateFolders = () => {\r\n    this.props.updateFolders(this.props.folders)\r\n  }\r\n\r\n  updateNotes = () => {\r\n    this.props.updateNotes(this.props.notes)\r\n  }\r\n\r\n  contextMenuShowHandler = (event, elemType, id) => {\r\n    event.preventDefault()\r\n    const { pageX, pageY } = event\r\n    this.setState({\r\n      contextMenu: {\r\n        x: pageX,\r\n        y: pageY,\r\n        show: true,\r\n        elemType,\r\n        id,\r\n      },\r\n    })\r\n  }\r\n\r\n  contextMenuHideHandler = () => {\r\n    this.setState({\r\n      contextMenu: {\r\n        x: -100,\r\n        y: -100,\r\n        show: false,\r\n      },\r\n    })\r\n  }\r\n\r\n  contextMenuOptionHandler = action => {\r\n    this.contextMenuHideHandler()\r\n    const elemType = this.state.contextMenu.elemType\r\n    const id = this.state.contextMenu.id\r\n    switch (action) {\r\n      case \"Delete\":\r\n        if (elemType === \"folder\") {\r\n          this.props.removeFolder(id)\r\n        } else if (elemType === \"note\") {\r\n          this.props.moveNoteToTrash(id)\r\n        }\r\n        break\r\n      case \"Rename\":\r\n        if (elemType === \"folder\") {\r\n          this.setState({ renameFolderId: id })\r\n        } else if (elemType === \"note\") {\r\n          this.setState({ renameNoteId: id })\r\n        }\r\n        break\r\n      case \"Clear\":\r\n        if (elemType === \"folder\") {\r\n          this.props.onClearNotesInTrash()\r\n        } else if (elemType === \"note\") {\r\n          throw new Error(\r\n            \"Trying clear trash when contextMenu.elemType === note\"\r\n          )\r\n        }\r\n        break\r\n      default:\r\n        if (Object.keys(action)[0] === \"backgroundColor\") {\r\n          this.props.onChangeFolderColor(id, action[\"backgroundColor\"])\r\n        } else if (Object.keys(action)[0] === \"icon\") {\r\n          this.props.onChangeFolderIcon(id, action[\"icon\"])\r\n        }\r\n        break\r\n    }\r\n  }\r\n\r\n  renameFolderHandler = event => {\r\n    if (\r\n      event.type === \"blur\" ||\r\n      (event.type === \"keypress\" && event.key === \"Enter\")\r\n    ) {\r\n      this.props.renameFolder(\r\n        this.state.renameFolderId,\r\n        event.currentTarget.textContent\r\n      )\r\n      this.setState({ renameFolderId: null })\r\n    }\r\n  }\r\n\r\n  renameNoteHandler = event => {\r\n    if (\r\n      event.type === \"blur\" ||\r\n      (event.type === \"keypress\" && event.key === \"Enter\")\r\n    ) {\r\n      this.props.renameFolder(\r\n        this.state.renameNoteId,\r\n        event.currentTarget.textContent\r\n      )\r\n      this.setState({ renameNoteId: null })\r\n    }\r\n  }\r\n\r\n  selectNoteHandler = id => {\r\n    this.props.selectNote(id)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.Explorer}>\r\n        <FolderItems\r\n          onRename={this.renameFolderHandler}\r\n          renameFolderId={this.state.renameFolderId}\r\n          showContext={this.contextMenuShowHandler}\r\n          addFolder={() =>\r\n            this.props.addFolder({\r\n              ...initialFolder,\r\n            })\r\n          }\r\n          current={this.props.currentFolder}\r\n          select={this.props.selectFolder}\r\n          folders={this.props.folders}\r\n        />\r\n        <NoteItems\r\n          onRename={this.renameNoteHandler}\r\n          renameNoteId={this.state.renameNoteId}\r\n          showContext={this.contextMenuShowHandler}\r\n          current={this.props.currentNote}\r\n          select={this.props.selectNote}\r\n          notes={\r\n            this.props.currentFolder === ALL_NOTES_ID\r\n              ? this.props.notes.filter(n => n.folder !== TRASH_ID)\r\n              : this.props.notes.filter(\r\n                  n => n.folder === this.props.currentFolder\r\n                )\r\n          }\r\n        />\r\n        <ContextMenu\r\n          optionHandler={this.contextMenuOptionHandler}\r\n          closed={this.contextMenuHideHandler}\r\n          show={this.state.contextMenu.show}\r\n          x={this.state.contextMenu.x}\r\n          y={this.state.contextMenu.y}\r\n          options={\r\n            this.state.contextMenu.elemType === \"folder\"\r\n              ? this.state.contextMenu.id === TRASH_ID\r\n                ? trashOptions\r\n                : folderOptions\r\n              : noteOptions\r\n          }\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    folders: state.folders.folders,\r\n    currentFolder: state.folders.currentFolder,\r\n    notes: state.notes.notes,\r\n    currentNote: state.notes.currentNote,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    selectFolder: id => dispatch(actions.selectFolder(id)),\r\n    addFolder: folder => dispatch(actions.addFolder(folder)),\r\n    renameFolder: (id, newName) => dispatch(actions.renameFolder(id, newName)),\r\n    removeFolder: id => dispatch(actions.removeFolder(id)),\r\n    fetchFolders: () => dispatch(actions.fetchFolders()),\r\n    updateFolders: folders => dispatch(actions.updateFolders(folders)),\r\n    onChangeFolderColor: (id, color) =>\r\n      dispatch(actions.changeFolderColor(id, color)),\r\n    onChangeFolderIcon: (id, icon) =>\r\n      dispatch(actions.changeFolderIcon(id, icon)),\r\n    onClearNotesInTrash: () => dispatch(actions.clearNotesInTrash()),\r\n\r\n    selectNote: id => dispatch(actions.selectNote(id)),\r\n    moveNoteToTrash: id => dispatch(actions.moveNoteToTrash(id)),\r\n    renameNote: (id, newName) => dispatch(actions.renameNote(id, newName)),\r\n    fetchNotes: () => dispatch(actions.fetchNotes()),\r\n    updateNotes: notes => dispatch(actions.updateNotes(notes)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Explorer)\r\n","import * as actionTypes from \"./actionTypes\"\r\nimport FireDB from \"../../FirebaseDBClient\"\r\n\r\nexport const addFolder = folder => {\r\n  return {\r\n    type: actionTypes.ADD_FOLDER,\r\n    folder: {\r\n      ...folder,\r\n      id: FireDB.getId(\"folders\"),\r\n    },\r\n  }\r\n}\r\n\r\nexport const selectFolder = id => {\r\n  return {\r\n    type: actionTypes.SELECT_FOLDER,\r\n    id,\r\n  }\r\n}\r\n\r\nexport const renameFolder = (id, newName) => {\r\n  return {\r\n    type: actionTypes.RENAME_FOLDER,\r\n    id,\r\n    newName,\r\n  }\r\n}\r\n\r\nexport const removeFolder = id => {\r\n  return {\r\n    type: actionTypes.REMOVE_FOLDER,\r\n    id,\r\n  }\r\n}\r\n\r\nexport const changeFolderIcon = (id, icon) => {\r\n  return {\r\n    type: actionTypes.CHANGE_FOLDER_ICON,\r\n    id,\r\n    icon,\r\n  }\r\n}\r\n\r\nexport const changeFolderColor = (id, color) => {\r\n  return {\r\n    type: actionTypes.CHANGE_FOLDER_COLOR,\r\n    id,\r\n    color,\r\n  }\r\n}\r\n\r\nexport const fetchFoldersStart = () => {\r\n  return {\r\n    type: actionTypes.FETCH_FOLDERS_START,\r\n  }\r\n}\r\n\r\nexport const fetchFoldersSuccess = folders => {\r\n  return {\r\n    type: actionTypes.FETCH_FOLDERS_SUCCESS,\r\n    folders,\r\n  }\r\n}\r\n\r\nexport const fetchFoldersFail = error => {\r\n  return {\r\n    type: actionTypes.FETCH_FOLDERS_FAIL,\r\n    error,\r\n  }\r\n}\r\n\r\nexport const fetchFolders = () => {\r\n  return dispatch => {\r\n    dispatch(fetchFoldersStart())\r\n    FireDB.get(\"folders\")\r\n      .then(response => {\r\n        dispatch(fetchFoldersSuccess(response))\r\n      })\r\n      .catch(error => {\r\n        dispatch(fetchFoldersFail(error))\r\n      })\r\n  }\r\n}\r\n\r\nexport const updateFoldersStart = () => {\r\n  return {\r\n    type: actionTypes.UPDATE_FOLDERS_START,\r\n  }\r\n}\r\n\r\nexport const updateFoldersSuccess = folders => {\r\n  return {\r\n    type: actionTypes.UPDATE_FOLDERS_SUCCESS,\r\n    folders,\r\n  }\r\n}\r\n\r\nexport const updateFoldersFail = error => {\r\n  return {\r\n    type: actionTypes.UPDATE_FOLDERS_FAIL,\r\n    error,\r\n  }\r\n}\r\n\r\nexport const updateFolders = folders => {\r\n  return dispatch => {\r\n    dispatch(updateFoldersStart())\r\n    FireDB.save({ folders: folders })\r\n      .then(response => {\r\n        dispatch(updateFoldersSuccess(response))\r\n      })\r\n      .catch(error => {\r\n        dispatch(updateFoldersFail(error))\r\n      })\r\n  }\r\n}\r\n","import React from \"react\"\r\n\r\nimport classes from \"./NoteEditingToolbar.module.css\"\r\nimport ToolbarButton from \"../UI/ToolbarButton/ToolbarButton\"\r\n\r\nconst NoteEditingToolbar = props => {\r\n  const buttons = props.buttons.map((button, index) => {\r\n    return (\r\n      <ToolbarButton\r\n        key={index}\r\n        active={button.active}\r\n        btnType={button.icon}\r\n        clicked={() => {\r\n          if (button.active) {\r\n            props.toolbarBtnClicked(button.activeAction)\r\n          } else {\r\n            props.toolbarBtnClicked(button.inactiveAction)\r\n          }\r\n        }}\r\n      />\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className={classes.NoteEditingToolbar}>\r\n      <div className={classes.ArrowBack} onClick={props.arrowClicked}>\r\n        <span className=\"material-icons\">arrow_back_ios</span>\r\n      </div>\r\n      {buttons}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NoteEditingToolbar\r\n","import React, { Component } from \"react\"\r\n\r\nimport classes from \"./NoteEditor.module.css\"\r\nimport { connect } from \"react-redux\"\r\nimport * as actions from \"../../../store/actions/index\"\r\n// import Spinner from \"../../../components/UI/Spinner/Spinner\"\r\nimport ReactQuill from \"react-quill\"\r\nimport NoteEditingToolbar from \"../../../components/NoteEditingToolbar/NoteEditingToolbar\"\r\n\r\nconst quillModules = {\r\n  toolbar: [\r\n    [{ header: [1, 2, false] }],\r\n    [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\r\n    [\r\n      { list: \"ordered\" },\r\n      { list: \"bullet\" },\r\n      { indent: \"-1\" },\r\n      { indent: \"+1\" },\r\n    ],\r\n    [\"link\", \"image\"],\r\n    [\"clean\"],\r\n  ],\r\n}\r\n\r\nconst quillFormats = [\r\n  \"header\",\r\n  \"bold\",\r\n  \"italic\",\r\n  \"underline\",\r\n  \"strike\",\r\n  \"blockquote\",\r\n  \"list\",\r\n  \"bullet\",\r\n  \"indent\",\r\n  \"link\",\r\n  \"image\",\r\n]\r\n\r\nclass NoteEditor extends Component {\r\n  state = {\r\n    text: \"\",\r\n  }\r\n\r\n  handleChange = value => {\r\n    if (this.props.currentNoteItem) {\r\n      this.props.inputText(this.props.currentNoteItem.id, value)\r\n    }\r\n  }\r\n\r\n  arrowBackHancler = () => {\r\n    this.props.selectNote(null)\r\n  }\r\n\r\n  render() {\r\n    const quill = (\r\n      <ReactQuill\r\n        modules={quillModules}\r\n        formats={quillFormats}\r\n        readOnly={!this.props.currentNoteItem}\r\n        value={\r\n          this.props.currentNoteItem ? this.props.currentNoteItem.content : \"\"\r\n        }\r\n        className={classes.Quill}\r\n        placeholder=\"Create note and start writing...\"\r\n        onChange={this.handleChange}\r\n      />\r\n    )\r\n\r\n    let noteEditorClasses = [classes.NoteEditor]\r\n\r\n    if (this.props.isShow) {\r\n      noteEditorClasses.push(classes.ShowEditor)\r\n    }\r\n    return (\r\n      <div className={noteEditorClasses.join(\" \")}>\r\n        <NoteEditingToolbar\r\n          arrowClicked={this.arrowBackHancler}\r\n          toolbarBtnClicked={() => {}}\r\n          buttons={[]}\r\n        />\r\n        {quill}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    currentNote: state.notes.currentNote,\r\n    currentNoteItem: state.notes.notes.find(\r\n      n => n.id === state.notes.currentNote\r\n    ),\r\n    notes: state.notes.notes,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    inputText: (id, text) => dispatch(actions.inputText(id, text)),\r\n    selectNote: id => dispatch(actions.selectNote(id)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteEditor)\r\n","import React, { Component } from \"react\"\r\n\r\nimport classes from \"./Tinote.module.css\"\r\nimport Menu from \"../../components/Menu/Menu\"\r\nimport Explorer from \"./Explorer/Explorer\"\r\nimport NoteEditor from \"./NoteEditor/NoteEditor\"\r\nimport { connect } from \"react-redux\"\r\nimport * as actions from \"../../store/actions/index\"\r\nimport { initialNote, TRASH_ID, ALL_NOTES_ID } from \"../../shared/constants\"\r\nimport { Redirect } from \"react-router-dom\"\r\n\r\nclass Tinote extends Component {\r\n  toolbarNoteHandler = () => {\r\n    if (this.props.isTrashOpen) {\r\n      this.props.onClearTrash()\r\n    } else {\r\n      this.props.onAddNote({\r\n        ...initialNote,\r\n        date: Date.now(),\r\n        folder:\r\n          this.props.currentFolder !== ALL_NOTES_ID\r\n            ? this.props.currentFolder\r\n            : null,\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let authRedirect = null\r\n    if (!this.props.isAuth) {\r\n      authRedirect = <Redirect to=\"/\" />\r\n    }\r\n\r\n    let isEditorOpen = false\r\n    let wrapperStyles = [classes.Wrapper]\r\n    if (this.props.currentNote) {\r\n      isEditorOpen = true\r\n      wrapperStyles.push(classes.ShowEditor)\r\n    }\r\n\r\n    return (\r\n      <div className={classes.Tinote}>\r\n        {authRedirect}\r\n        <div className={wrapperStyles.join(\" \")}>\r\n          <Menu\r\n            logout={this.props.onLogout}\r\n            toolbarBtnType={this.props.isTrashOpen ? \"delete\" : \"note_add\"}\r\n            toolbarButtonClicked={this.toolbarNoteHandler}\r\n          />\r\n          <Explorer />\r\n        </div>\r\n        <NoteEditor isShow={isEditorOpen} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isTrashOpen: state.folders.currentFolder === TRASH_ID,\r\n    currentFolder: state.folders.currentFolder,\r\n    isAuth: state.auth.isAuth,\r\n    currentNote: state.notes.currentNote,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAddNote: note => dispatch(actions.addNote(note)),\r\n    onLogout: () => dispatch(actions.logout()),\r\n    onClearTrash: () => dispatch(actions.clearNotesInTrash()),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tinote)\r\n","import React from \"react\"\r\n\r\nimport classes from \"./Input.module.css\"\r\n\r\nconst input = props => {\r\n  const inputClasses = [classes.InputElement]\r\n\r\n  if (props.invalid) {\r\n    inputClasses.push(classes.Invalid)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.Input}>\r\n      <input\r\n        {...props.elemConfig}\r\n        className={inputClasses.join(\" \")}\r\n        type={props.type}\r\n        value={props.value}\r\n        onInput={props.onInput}\r\n        placeholder={props.placeholder}\r\n      ></input>\r\n      <span className={classes.Error}>{props.error}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default input\r\n","import React from \"react\"\r\nimport classes from \"./Button.module.css\"\r\n\r\nconst button = props => {\r\n  const classNames = [classes.Button]\r\n  classNames.push(classes[props.btnTupe])\r\n\r\n  return (\r\n    <button\r\n      type={props.type}\r\n      className={classNames.join(\" \")}\r\n      onClick={props.clicked}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default button\r\n","import React from \"react\"\r\n\r\nimport classes from \"./Spinner.module.css\"\r\n\r\nconst spinner = props => {\r\n  return <div className={classes.loader}>Loading...</div>\r\n}\r\n\r\nexport default spinner\r\n","import React from \"react\"\r\nimport Input from \"../../components/UI/Input/Input\"\r\nimport Button from \"../../components/UI/Button/Button\"\r\nimport validator from \"validator\"\r\nimport classes from \"./Auth.module.css\"\r\nimport * as actions from \"../../store/actions/index\"\r\nimport { connect } from \"react-redux\"\r\nimport { Redirect } from \"react-router\"\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\"\r\n\r\nclass Auth extends React.Component {\r\n  state = {\r\n    isEmailInvalid: false,\r\n    isPasswordInvalid: false,\r\n    isSignin: true,\r\n    emailValue: \"\",\r\n    passwordValue: \"\",\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onCheckAuthState()\r\n  }\r\n\r\n  emailInputHandler = event => {\r\n    if (!validator.isEmail(event.target.value)) {\r\n      if (!this.state.isEmailInvalid) {\r\n        this.setState({\r\n          isEmailInvalid: true,\r\n          emailValue: event.target.value,\r\n        })\r\n      }\r\n    } else {\r\n      if (this.state.isEmailInvalid) {\r\n        this.setState({\r\n          isEmailInvalid: false,\r\n          emailValue: event.target.value,\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  passwordInputHandler = event => {\r\n    if (\r\n      !validator.isLength(event.target.value, {\r\n        min: 6,\r\n        max: 24,\r\n      })\r\n    ) {\r\n      this.setState({\r\n        isPasswordInvalid: true,\r\n        passwordValue: event.target.value,\r\n      })\r\n    } else {\r\n      this.setState({\r\n        isPasswordInvalid: false,\r\n        passwordValue: event.target.value,\r\n      })\r\n    }\r\n  }\r\n\r\n  sumbitHandler = e => {\r\n    e.preventDefault()\r\n\r\n    if (!this.state.isEmailInvalid && !this.state.isPasswordInvalid) {\r\n      if (this.state.isSignin) {\r\n        this.props.onSignin(this.state.emailValue, this.state.passwordValue)\r\n      } else {\r\n        this.props.onSignup(this.state.emailValue, this.state.passwordValue)\r\n      }\r\n    }\r\n  }\r\n\r\n  switchModeHandler = e => {\r\n    e.preventDefault()\r\n\r\n    this.setState(prevState => {\r\n      return {\r\n        isSignin: !prevState.isSignin,\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let authRedirect = null\r\n    if (this.props.isAuth) {\r\n      authRedirect = <Redirect to=\"/tinote\"></Redirect>\r\n    }\r\n\r\n    let form = <Spinner />\r\n\r\n    if (!this.props.loading) {\r\n      form = (\r\n        <form onSubmit={this.sumbitHandler} className={classes.Auth}>\r\n          <Input\r\n            placeholder=\"Email\"\r\n            type=\"text\"\r\n            onInput={this.emailInputHandler}\r\n            invalid={this.state.isEmailInvalid}\r\n            error={this.state.isEmailInvalid ? \"Invalid email\" : null}\r\n          />\r\n          <Input\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n            onInput={this.passwordInputHandler}\r\n            invalid={this.state.isPasswordInvalid}\r\n            error={\r\n              this.state.isPasswordInvalid\r\n                ? \"Password must be min 6 characters\"\r\n                : null\r\n            }\r\n          />\r\n          <div className={classes.Buttons}>\r\n            <Button type={\"submit\"}>\r\n              {this.state.isSignin ? \"Signin\" : \"Signup\"}\r\n            </Button>\r\n            <Button type={\"button\"} clicked={this.switchModeHandler}>\r\n              Switch to {this.state.isSignin ? \"Signup\" : \"Signin\"}\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {authRedirect}\r\n        {form}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n    loading: state.auth.loading,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSignin: (email, password) => dispatch(actions.signIn(email, password)),\r\n    onSignup: (email, password) => dispatch(actions.signUp(email, password)),\r\n    onCheckAuthState: () => dispatch(actions.checkAuthState()),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth)\r\n","import React from \"react\"\nimport Layout from \"./hoc/Layout/Layout\"\nimport Tinote from \"./containers/Tinote/Tinote\"\nimport { Switch, Route } from \"react-router-dom\"\nimport Auth from \"./containers/Auth/Auth\"\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/tinote\" component={Tinote} />\n        <Route path=\"/\" component={Auth} />\n      </Switch>\n    </Layout>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from \"../actions/actionTypes\"\r\nimport {updateObject} from \"../../shared/utility\"\r\nimport { TRASH_ID } from \"../../shared/constants\"\r\n\r\nconst initialState = {\r\n  notes: [],\r\n  currentNote: null,\r\n  loading: false,\r\n  error: null\r\n}\r\n\r\nconst selectNote = (state, action) => {\r\n  return updateObject(state, {\r\n    currentNote: action.id\r\n  })\r\n}\r\n\r\nconst addNote = (state, action) => {\r\n  return updateObject(state, {\r\n    notes: state.notes.concat(action.note)\r\n  })\r\n}\r\n\r\nconst moveToTrashNote = (state, action) => {\r\n  return updateObject(state, {\r\n    notes: state.notes.map(n => {\r\n      if (n.id === action.id) {\r\n        return {\r\n          ...n,\r\n          folder: TRASH_ID\r\n        }\r\n      }\r\n      return n\r\n    })\r\n  })\r\n}\r\n\r\nconst inputText = (state, action) => {\r\n  return updateObject(state, {\r\n    notes: state.notes.map(n => {\r\n      if (n.id === action.id) {\r\n        return {\r\n          ...n,\r\n          content: action.text\r\n        }\r\n      }\r\n      return n\r\n    })\r\n  })\r\n}\r\n\r\nconst renameNote = (state, action) => {\r\n  // console.log(\"Rename reducer\")\r\n  // console.log(action)\r\n  return updateObject(state, {\r\n    notes: state.notes.map(n => {\r\n      if (n.id === action.id) {\r\n        return {\r\n          ...n,\r\n          title: action.newName\r\n        }\r\n      }\r\n      return n\r\n    })\r\n  })\r\n}\r\n\r\nconst fetchNotesStart = (state, action) => {\r\n  return updateObject(state, {\r\n    loading: true,\r\n    error: null\r\n  })\r\n}\r\n\r\nconst fetchNotesSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    // currentNote: action.notes.length ? action.notes[0].id : null,\r\n    currentNote: null,\r\n    notes: action.notes,\r\n    loading: false,\r\n    error: null\r\n  })\r\n}\r\n\r\nconst fetchNotesFail = (state, action) => {\r\n  return updateObject(state, {\r\n    loading: false,\r\n        error: action.error\r\n  })\r\n}\r\n\r\nconst updateNotesStart = (state, action) => {\r\n  return updateObject(state, {\r\n    loading: true,\r\n    error: null\r\n  })\r\n}\r\n\r\nconst updateNotesSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    loading: false,\r\n    error: null\r\n  })\r\n}\r\n\r\nconst updateNotesFail = (state, action) => {\r\n  return updateObject(state, {\r\n    loading: false,\r\n    error: action.error\r\n  })\r\n}\r\n\r\nconst clearNotesInTrash = (state, action) => {\r\n  return {\r\n    ...state,\r\n    notes: state.notes.filter(n => n.folder !== TRASH_ID)\r\n  }\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SELECT_NOTE: return selectNote(state, action)\r\n    case actionTypes.ADD_NOTE: return addNote(state, action)\r\n    case actionTypes.MOVE_TO_TRASH_NOTE: return moveToTrashNote(state, action)\r\n    case actionTypes.INPUT_TEXT: return inputText(state, action)\r\n    case actionTypes.RENAME_NOTE: return renameNote(state, action)\r\n    case actionTypes.FETCH_NOTES_START: return fetchNotesStart(state, action)\r\n    case actionTypes.FETCH_NOTES_SUCCESS:return fetchNotesSuccess(state, action)\r\n    case actionTypes.FETCH_NOTES_FAIL: return fetchNotesFail(state, action)\r\n    case actionTypes.UPDATE_NOTES_START: return updateNotesStart(state, action)\r\n    case actionTypes.UPDATE_NOTES_SUCCESS: return updateNotesSuccess(state, action)\r\n    case actionTypes.UPDATE_NOTES_FAIL: return updateNotesFail(state, action)\r\n    case actionTypes.CLEAR_NOTES_IN_TRASH: return clearNotesInTrash(state, action)\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","import * as actionTypes from \"../actions/actionTypes\"\r\nimport {updateObject} from \"../../shared/utility\"\r\nimport { ALL_NOTES_ID } from \"../../shared/constants\"\r\n\r\nconst initialState = {\r\n  folders: [],\r\n  currentFolder: ALL_NOTES_ID,\r\n  loading: false,\r\n  error: null\r\n}\r\n\r\nconst selectFolder = (state, action) => {\r\n  return updateObject(state, {\r\n    currentFolder: action.id\r\n  })\r\n}\r\n\r\nconst addFolder = (state, action) => {\r\n  return updateObject(state, {\r\n    folders: state.folders.concat(action.folder)\r\n  })\r\n}\r\n\r\nconst removeFolder = (state, action) => {\r\n  return updateObject(state, {\r\n    folders: state.folders.filter(f => f.id !== action.id)\r\n  })\r\n}\r\n\r\nconst renameFolder = (state, action) => {\r\n  return updateObject(state, {\r\n    folders: state.folders.map(n => {\r\n      if (n.id === action.id) {\r\n        return {\r\n          ...n,\r\n          name: action.newName\r\n        }\r\n      }\r\n      return n\r\n    })\r\n  })\r\n}\r\n\r\nconst fetchFoldersStart = (state, action) => {\r\n  return updateObject(state, {\r\n    loading: true,\r\n    error: null\r\n  })\r\n}\r\n\r\nconst fetchFoldersSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    folders: action.folders,\r\n    loading: false,\r\n    error: null\r\n  })\r\n}\r\n\r\nconst fetchFoldersFail = (state, action) => {\r\n  return updateObject(state, {\r\n    loading: false,\r\n    error: action.error\r\n  })\r\n}\r\n\r\nconst updateFoldersStart = (state, action) => {\r\n  return updateObject(state, {\r\n    loading: true,\r\n    error: null\r\n  })\r\n}\r\n\r\nconst updateFoldersSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    loading: false,\r\n    error: null\r\n  })\r\n}\r\n\r\nconst updateFoldersFail = (state, action) => {\r\n  return updateObject(state, {\r\n    loading: false,\r\n    error: action.error\r\n  })\r\n}\r\n\r\nconst changeFolderIcon = (state, action) => {\r\n  return updateObject(state, {\r\n    folders: state.folders.map(f => {\r\n      if (f.id === action.id) {\r\n        return {\r\n          ...f,\r\n          icon: action.icon\r\n        }\r\n      } \r\n      return f\r\n    })\r\n  })\r\n}\r\n\r\nconst changeFolderColor = (state, action) => {\r\n  return updateObject(state, {\r\n    folders: state.folders.map(f => {\r\n      if (f.id === action.id) {\r\n        return {\r\n          ...f,\r\n          color: action.color\r\n        }\r\n      } \r\n      return f\r\n    })\r\n  })\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SELECT_FOLDER: return selectFolder(state, action)\r\n    case actionTypes.ADD_FOLDER: return addFolder(state, action)\r\n    case actionTypes.REMOVE_FOLDER: return removeFolder(state, action)\r\n    case actionTypes.RENAME_FOLDER: return renameFolder(state, action)\r\n    case actionTypes.FETCH_FOLDERS_START: return fetchFoldersStart(state, action)\r\n    case actionTypes.FETCH_FOLDERS_SUCCESS: return fetchFoldersSuccess(state, action)\r\n    case actionTypes.FETCH_FOLDERS_FAIL: return fetchFoldersFail(state, action)\r\n    case actionTypes.UPDATE_FOLDERS_START: return updateFoldersStart(state, action)\r\n    case actionTypes.UPDATE_FOLDERS_SUCCESS: return updateFoldersSuccess(state, action)\r\n    case actionTypes.UPDATE_FOLDERS_FAIL: return updateFoldersFail(state, action)\r\n    case actionTypes.CHANGE_FOLDER_ICON: return changeFolderIcon(state, action)\r\n    case actionTypes.CHANGE_FOLDER_COLOR: return changeFolderColor(state, action)\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","import * as actionTypes from \"../actions/actionTypes\"\r\nimport { updateObject } from \"../../shared/utility\"\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  error: null,\r\n  isAuth: false\r\n}\r\n\r\nconst authStart = (state, action) => {\r\n  return updateObject(state, {\r\n    error: null,\r\n    loading: true\r\n  })\r\n}\r\n\r\nconst authSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    error: action.error,\r\n    loading: false,\r\n    isAuth: true\r\n  })\r\n}\r\n\r\n\r\n\r\nconst authFail = (state, action) => {\r\n  return updateObject(state, {\r\n    error: action.error,\r\n    loading: false,\r\n  })\r\n}\r\n\r\nconst authLogout = (state, action) => {\r\n  return updateObject(state, {\r\n    error: null,\r\n    loading: false,\r\n    isAuth: false\r\n  })\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.AUTH_START: return authStart(state, action)\r\n    case actionTypes.AUTH_SUCCESS: return authSuccess(state, action)\r\n    case actionTypes.AUTH_FAIL: return authFail(state, action)\r\n    case actionTypes.AUTH_LOGOUT: return authLogout(state, action)\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport {createStore, combineReducers, applyMiddleware, compose} from \"redux\"\r\nimport {Provider} from \"react-redux\"\r\nimport thunk from \"redux-thunk\"\r\n\r\nimport notesReducer from \"./store/reducers/notes\"\r\nimport foldersReducer from \"./store/reducers/folders\"\r\nimport {BrowserRouter} from \"react-router-dom\"\r\nimport authReducer from \"./store/reducers/auth\"\r\n\r\n//====================================\r\nimport 'react-quill/dist/quill.snow.css';\r\n//====================================\r\n\r\nconst reducers = combineReducers({\r\n    notes: notesReducer,\r\n    folders: foldersReducer,\r\n    auth: authReducer\r\n  }\r\n)\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)))\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Tinote\":\"Tinote_Tinote__zR4LF\",\"Wrapper\":\"Tinote_Wrapper__2uM3T\",\"ShowEditor\":\"Tinote_ShowEditor__1UYHh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Profile\":\"Profile_Profile__27aSU\",\"Img\":\"Profile_Img__1uK1f\",\"ProfileName\":\"Profile_ProfileName__1r2QR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__-usOs\",\"Search\":\"Toolbar_Search__N9e9d\",\"Button\":\"Toolbar_Button__2GQQB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__2J4x8\",\"Open\":\"SideDrawer_Open__2kDGZ\",\"Close\":\"SideDrawer_Close__3IzkX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NoteEditor\":\"NoteEditor_NoteEditor__32Jd1\",\"Quill\":\"NoteEditor_Quill__2sfGQ\",\"ShowEditor\":\"NoteEditor_ShowEditor__20fAX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ToolbarButton\":\"ToolbarButton_ToolbarButton__1h2sg\",\"Active\":\"ToolbarButton_Active__3gHIp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NoteEditingToolbar\":\"NoteEditingToolbar_NoteEditingToolbar__1mAYl\",\"ArrowBack\":\"NoteEditingToolbar_ArrowBack__hEszf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1bqV7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__ZsR1l\",\"Buttons\":\"Auth_Buttons__2mV6p\"};"],"sourceRoot":""}